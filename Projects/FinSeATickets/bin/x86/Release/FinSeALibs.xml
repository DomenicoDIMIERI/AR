<?xml version="1.0"?>
<doc>
<assembly>
<name>
FinSeALibs
</name>
</assembly>
<members>
<member name="P:FinSeA.Anagrafica.CBanca.Descrizione">
	<summary>
 Restituisce o imposta il nome dell'istututo bancario
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.Filiale">
	<summary>
 Restituisce o imposta il nome della filiale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.Indirizzo">
	<summary>
 Restituisce o imposta l'indirizzo della filiale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.ABI">
	<summary>
 Restituisce o imposta il codice dell'istituto bancario
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.CAB">
	<summary>
 Restituisce o imposta il codice della filiale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.SWIFT">
	<summary>
 Restituisce o imposta il codice SWIFT
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.DataApertura">
	<summary>
 Restituisce o imposta la data di apertura della banca
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.DataChiusura">
	<summary>
 Restituisce o imposta la data di chiusura della filiale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CBanca.Attiva">
	<summary>
 Restituisce o imposta un valore booleano che indica se la filiale della banca è attiva
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.ToDB``1(System.Nullable{``0})">
	<summary>
 Restituisce il valore dell'oggetto o DBNull se l'oggetto è vuoto
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.ToDB(System.String)">
	<summary>
 Restituisce il valore della stringa o DBNull se la stringa è nulla
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.DBDate(System.Object)">
	<summary>
 Restituisce la data nel formato MM/DD/YYYY HH.NN.SS
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.DBNumber(System.Object)">
	<summary>
  Restituisce il formato SQL del numero
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.DBString(System.Object)">
	<summary>
 Restituisce una stringa utilizzabile in una istruzione SQL (sostituisce ' con '')
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.DBBool(System.Object)">
	<summary>
 Restituisce il formato SQL del valore booleano
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.GetDataTypeFamily(FinSeA.Databases.adDataTypeEnum)">
	<summary>
 Restituisce un valore che indica se si tratta di un tipo data, stringa, numerico o altro
 </summary>
	<param name="rdt"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBUtilsClass.GetOriginalValue(FinSeA.Databases.DBObjectBase,System.String)">
	<summary>
 Restituisce la proprietà dell'oggetto prima delle modifiche
 </summary>
	<param name="obj"></param>
	<param name="fieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.EliminaNotificaAction">
	<summary>
 Azione definita su tutte le notifiche
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CDBEntity.TrackChanges">
	<summary>
 Restituisce o imposta un valore booleano che impone al sistema di tenere traccia di tutte le modifiche fatte ai campi 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CIntervalloCAP">
	<summary>
 Rappresenta un intervallo di codici CAP assegnati ad un comune
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ModuleActionHandler.Execute(FinSeA.Sistema.CModuleAction,System.Object)">
	<summary>
 Esegue l'azione specificata 
 </summary>
	<param name="action"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.ModuleActionHandler">
	<summary>
 Interfaccia implementata dai gestori di un'azione
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.NLong">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Long) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXUserCursor">
	<summary>
 Cursore sulla tabella dei moduli definiti per utente
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModule.ModuleName">
	<summary>
 Restituisce il nome del modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModule.DefinedActions">
	<summary>
 Restituisce la collezione delle azioni definite per il modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModule.ClassHandler">
	<summary>
 Restituisce o imposta il nome della classe che gestisce il modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModule.Childs">
	<summary>
 Restituisce la collezione dei moduli "figlio"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUserAuthorization.ActionID">
	<summary>
 Restituisce o imposta l'ID dell'azione associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUserAuthorization.Action">
	<summary>
 Restituisce o imposta l'azione associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUserAuthorization.UserID">
	<summary>
 Restituisce o imposta l'ID dell'utente associato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUserAuthorization.Allow">
	<summary>
 Restituisce o imposta un valore booleano che consente esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUserAuthorization.Negate">
	<summary>
 Restituisce o imposta un valore booleano che nega esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CUserAuthorization">
	<summary>
 Rappresenta una autorizzazione o una negazione esplicita di un'azione ad uno specifico utente
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.FontiDefaultProvider">
	<summary>
 Provider predefinito delle fonti
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CImpiegato">
	<summary>
 Classe che descrive una relazione di impiego tra una persona ed un'azienda
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CCalendarActivity.Operator">
	<summary>
 Restituisce l'utente che ha creato l'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CCalendarActivity">
	<summary>
 Oggetto che rappresenta un attività o un appuntamento del calendario
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.IModuleHandler.Module">
	<summary>
 Restituisce il modulo gestito
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.IModuleHandler.SetModule(FinSeA.Sistema.CModule)">
	<summary>
 Imposta il modulo gestito
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.IModuleHandler.ExecuteAction(System.Object,System.String)">
	<summary>
 Esegue l'azione specificata
 </summary>
	<param name="actionName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.IModuleHandler.ExecuteAction1(System.Object,System.String)">
	<summary>
 Esegue l'azione specificata
 </summary>
	<param name="actionName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.IModuleHandler.CreateCursor">
	<summary>
 Crea un cursore per l'accesso agli oggetti gestiti dal modulo
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.IModuleHandler.UseLocal">
	<summary>
 Restituisce o imposta un valore booleano che indica se l'inizializzazione avviene sul server o sul client (vero indica il client)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.AzioneEseguitaCursor">
	<summary>
 Cursore sulla tabella delle azione eseguite
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.Persona">
	<summary>
 Restituisce l'oggetto Persona a cui è associato l'indirizzo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.CAP">
	<summary>
 Restituisce o imposta il CAP dell'indirizzo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.Toponimo">
	<summary>
 Restituisce o imposta il tipo del luogo (via, piazza, contrada, ecc..)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.Via">
	<summary>
 Restituisce il nome del luogo 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.ToponimoEVia">
	<summary>
 Restituisce o imposta il tipo del luogo seguito dal nome
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.Civico">
	<summary>
 Restituisce il numero civico
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.Note">
	<summary>
 Restituisce o imposta delle note 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIndirizzo.NomeComune">
	<summary>
 Restituisce o imposta il nome della città seguito dal nome della provincia tra parentesi tonde
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.NDate">
	<summary>
 Rappresenta una data che può assumere un valore NULL.
 A differenza di Nullable(of Date) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.NInteger">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Integer) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.GetItemById(System.Int32)">
	<summary>
 Restituisce l'elemento in base al suo ID nel DB
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.GetItemByName(System.String)">
	<summary>
 Restituisce l'elemento in base al suo nome nel DB
 </summary>
	<param name="name"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.Active">
	<summary>
 Restituisce o imposta un valore booleano che indica se l'evento è attivo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.ModuleID">
	<summary>
 Restituisce o imposta l'ID del modulo di cui l'handler gestisce l'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.Module">
	<summary>
 Restituisce o imposta il modulo di cui l'handler gestisce l'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.EventName">
	<summary>
 Restituisce o imposta il nome dell'evento gestito da questo handler
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.RegisteredEventHandler.CreateHandler">
	<summary>
 Restituisce l'handler
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.ClassName">
	<summary>
 Restituisce o imposta il nome della classe gestore
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.RegisteredEventHandler.Priority">
	<summary>
 Restituisce o imposta un numero che indica la priorità di esecuzione del gestore. Numero maggiori indicano priorità minore
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.RegisteredEventHandler">
	<summary>
 Registrazione di un handler di un evento
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetDiskFreeSpace(System.String)">
	<summary>
 Restituisce lo spazio libero nel disco specificato (in bytes)
 </summary>
	<param name="driveLetter"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetDiskTotalSpace(System.String)">
	<summary>
 Restituisce la dimensione totale del disco specificato (in bytes)
 </summary>
	<param name="driveLetter"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetDiskLabel(System.String)">
	<summary>
 Restituisce l'etichetta del disco specificato
 </summary>
	<param name="driveLetter"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CFileSystemClass.LimitRoot">
	<summary>
 Restituisce o imposta il percorso minimo di lavoro. Se diverso da NULL la libreria potrà operare solo su cartelle e files contenuti all'interno di questo percorso
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetTempFileName(System.String)">
	<summary>
 Restituisce un nome di file temporaneo
 </summary>
	<param name="extension"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetTempFileName(System.String,System.String)">
	<summary>
 Restituisce un nome di file temporaneo
 </summary>
	<param name="prefix"></param>
	<param name="extension"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetFileName(System.String)">
	<summary>
  Estrae il solo nome con l'eventuale estensione
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetBaseName(System.String)">
	<summary>
 Estrae il solo nome 
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetExtensionName(System.String)">
	<summary>
 Estrae l'estensione dal nome del file
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.CreateTextFile(System.String,System.String)">
	<summary>
 Crea o sostituisce il file indicato dal percorso inserendovi il contenuto specificato nella stringa content
 </summary>
	<param name="path"></param>
	<param name="content"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.CreateFolder(System.String)">
	<summary>
 Crea il percorso (se il percorso esiste genera errore)
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.FolderExists(System.String)">
	<summary>
 Restituisce vero se il folder esiste
 </summary>
	<param name="path"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.FileExists(System.String)">
	<summary>
 Restituisce vero se il file esiste
 </summary>
	<param name="path"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.CreateRecursiveFolder(System.String)">
	<summary>
 Crea il percorso (se il percorso esiste genera errore)
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetFolderName(System.String)">
	<summary>
 Estrae il percorso del folder che contiene il file o la cartella
 </summary>
	<param name="path"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetTextFileContents(System.String)">
	<summary>
 Ottiene un buffer stringa contenente l'intero file
 </summary>
	<param name="filePath"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.CopyFile(System.String,System.String,System.Boolean)">
	<summary>
 Crea una copia del file
 </summary>
	<param name="source"></param>
	<param name="destination"></param>
	<param name="overwrite"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.RemoveSpecialChars(System.String)">
	<summary>
 Rimuove i caratteri non utilizzabili in un nome di files o di cartella
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetAllFiles(System.String)">
	<summary>
 Restituisce un oggetto CCollection contenente tutti i nome di files e folder contenuti nel percorso specificato
 </summary>
	<param name="sFolder"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetAllFiles(System.String,System.String)">
	<summary>
 Restituisce un oggetto CCollection contenente tutti i nome di files e folder contenuti nel percorso specificato
 </summary>
	<param name="sFolder"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetCreationTime(System.String)">
	<summary>
 Restituisce la data di creazione del file
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetLastModifiedTime(System.String)">
	<summary>
 Restituisce la data dell'ultima modifica del file
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetLastAccessTime(System.String)">
	<summary>
 Restituisce la data dell'ultima modifica del file
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.GetFileSize(System.String)">
	<summary>
 Restituisce la dimensione in bytes del file
 </summary>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.DeleteFile(System.String,System.Boolean)">
	<summary>
 Elimina uno o più files (wildchars)
 </summary>
	<param name="path"></param>
	<param name="force"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.MoveFile(System.String,System.String)">
	<summary>
 Sposta il file
 </summary>
	<param name="source"></param>
	<param name="target"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.CombinePath(System.String,System.String)">
	<summary>
 Combina il percorso ad un percorso base
 </summary>
	<param name="folderName"></param>
	<param name="fileName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFileSystemClass.NormalizePath(System.String)">
	<summary>
 Restituisce il nome del percorso "normalizzato" cioè aggiungendo "\" alla fine (se non presente)
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CIBAN.IBAN">
	<summary>
 Restituisce o imposta il codice IBAN rappresentato dall'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CIBAN.IsValid">
	<summary>
 Restituisce vero se il codice rappresentato è valido
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CIBAN">
	<summary>
 Classe che rappresenta un codice IBAN
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CRicontattiClass.GetProssimoRicontatto(System.Int32,System.String)">
	<summary>
 Restituisce il prossimo ricontatto a partire da adesso
 </summary>
	<param name="idPersona"></param>
	<param name="nomeLista"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.StatoAttivita">
	<summary>
 Stato dell'attività
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Descrizione">
	<summary>
 Descrizione dell'attività
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Luogo">
	<summary>
 Luogo in cui si svolge l'attività
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Note">
	<summary>
 Note aggiuntive
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.GiornataIntera">
	<summary>
 Vero se l'attività è relativa all'intera giornata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Promemoria">
	<summary>
 Promemoria in minuti
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Ripetizione">
	<summary>
 Numero di ripetizioni dell'attività a partire dalla data di inizio. 
 Se 0 l'attività si ripete fino a DataFine o all'infinito se DataFine non è valorizzata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.DataInizio">
	<summary>
 Data di inizio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.DataFine">
	<summary>
 Data finale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.OperatorID">
	<summary>
 ID dell'operatore a cui è assegnata l'attività
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Operator">
	<summary>
 Operatore a cui è assegnata l'attività
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.ICalendarActivity.Tag">
	<summary>
 Un campo aggiuntivo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.ICalendarActivity">
	<summary>
 Interfaccia implementata da un'oggetto che sfrutta il calendario per la gestione degli eventi
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.StatsItemComparerByName">
	<summary>
 Compara gli oggetti StatsItem sulla base del campo Name in ordine crescente
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CGroupMembersCollection.IndexOf(System.Int32)">
	<summary>
 Restituisce l'indice dell'utente con l'ID specificato
 </summary>
	<param name="userID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CGroupMembersCollection.Contains(System.Int32)">
	<summary>
 Restituisce un valore booleano che indica se l'utente appartiene a questo gruppo
 </summary>
	<param name="userID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CGroupMembersCollection.Remove(System.Int32)">
	<summary>
 Rimuove l'utente specificato da questo gruppo
 </summary>
	<param name="userID"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CGroupMembersCollection.Add(FinSeA.Sistema.CUser)">
	<summary>
 Aggiunte l'utente specificato da questo gruppo
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.PrintWriter">
	<summary>
 public class PrintWriter
 extends Writer
 Prints formatted representations of objects to a text-output stream. This class implements all of the print methods found in PrintStream. It does not contain methods for writing raw bytes, for which a program should use unencoded byte streams.
 Unlike the PrintStream class, if automatic flushing is enabled it will be done only when one of the println, printf, or format methods is invoked, rather than whenever a newline character happens to be output. These methods use the platform's own notion of line separator rather than the newline character.
 Methods in this class never throw I/O exceptions, although some of its constructors may. The client may inquire as to whether any errors have occurred by invoking checkError().
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.Settings">
	<summary>
 Restituisce o imposta la collezione delle impostazioni di sistema
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.StartupFloder">
	<summary>
 Restituisce la cartella di avvio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.TmporaryFolder">
	<summary>
 Restituisce la cartella temporanea predefinita
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.WorkingFolder">
	<summary>
 Restituisce il percorso di lavoro predefinito
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.InstanceID">
	<summary>
 Restituisce l'ID dell'applicazione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.Description">
	<summary>
 Restituisce la descrizione dell'applicazione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.CurrentUser">
	<summary>
 Restituisce l'utente corrente (nella sessione)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.CurrentSession">
	<summary>
 Restituisce la sessione corrente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.GetEntryAssembly">
	<summary>
 Restituisce l'assembly principale
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.GetParameter(System.String,System.String)">
	<summary>
 Restituisce un parametro letto dall'applicazione
 </summary>
	<param name="paramName"></param>
	<param name="defValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.GetParameter``1(System.String,System.Object)">
	<summary>
 Restituisce un parametro letto dall'applicazione
 </summary>
	<typeparam name="T"></typeparam>
	<param name="paramName"></param>
	<param name="defValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.MapPath(System.String)">
	<summary>
 Effettua il mapping del percorso 
 </summary>
	<param name="path"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.UnMapPath(System.String)">
	<summary>
 Effettua l'unmapping del percorso
 </summary>
	<param name="path"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.IsUserLogged(FinSeA.Sistema.CUser)">
	<summary>
 Restituisce vero se l'utente è connesso
 </summary>
	<param name="user"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IApplicationContext.IsDebug">
	<summary>
 Restituisce vero se l'applicazione è in modalità di debug
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.IApplicationContext.AziendaPrincipale">
	<summary>
 Restituisce o imposta l'azienda di lavoro principale 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.IApplicationContext">
	<summary>
 Interfaccia implementata dall'applicazione e necessaria per interfacciarsi alla libreria
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.APPConn">
	<summary>
 Restituisce l'oggetto Connessione al DB principale dell'applicazione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.LOGConn">
	<summary>
 Restituisce l'oggetto Connessione al DB dei log dell'applicazione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.IsFieldChanged(System.Object,System.String)">
	<summary>
 Restituisce ver se l'oggetto riporta che il campo ha subito modifiche da quando è stato caricato
 </summary>
	<param name="obj"></param>
	<param name="fieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.ByteArrayInputStream">
	<summary>
 A ByteArrayInputStream contains an internal buffer that contains bytes that may be read from the stream. An internal counter keeps track of the next byte to be supplied by the read method.
 Closing a ByteArrayInputStream has no effect. The methods in this class can be called after the stream has been closed without generating an IOException.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CUserAuthorizationCollection">
	<summary>
 Collezione delle autorizzazioni utente
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.toRadians(System.Double)">
	<summary>
 Converte un angolo sessadecimale in un angolo in radianti
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.Sum(System.Nullable{System.Double},System.Nullable{System.Double})">
	<summary>
 Somma due valori, se uno dei valori è null la somma è NULL
 </summary>
	<param name="a"></param>
	<param name="b"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.SumNulls(System.Nullable{System.Double},System.Nullable{System.Double})">
	<summary>
 Somma due valori. Se uno dei valori è NULL viene considerato come 0
 </summary>
	<param name="a"></param>
	<param name="b"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.Floor(System.Decimal)">
	<summary>
 Approssima un numero al suo valore intero per difetto 
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.TryParseBoolean(System.String,System.Int32@)">
	<summary>
 Tenta di ottenere un valore booleano dall'espressione e restituisce un codice di errore
 </summary>
	<param name="expr"></param>
	<param name="errorCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Math.FindZero(FinSeA.FunEvaluator,System.Double,System.Double,System.Double)">
	<summary>
 Cerca uno zero della funzione f(x) all'interno dell'intervallo [a, b] utilizzando il metodo delle bisezioni
 </summary>
	<param name="fEv"></param>
	<param name="a"></param>
	<param name="b"></param>
	<param name="tolmin1"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CContatto.Persona">
	<summary>
 Restituisce l'oggetto Persona a cui è associato l'indirizzo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CCalendarActivityCursor">
	<summary>
 Cursore sulle attività del calendario
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredCalendarProvidersCollection.RegisterProvider(System.String,System.Type)">
	<summary>
 Registra il nome della classe come nuove provider per il calendario
 </summary>
	<param name="pName"></param>
	<param name="type"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredCalendarProvidersCollection.RegisterProvider(System.String,System.String)">
	<summary>
 Registra il nome della classe come nuove provider per il calendario
 </summary>
	<param name="pName"></param>
	<param name="typeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredCalendarProvidersCollection.UnregisterProvider(System.String)">
	<summary>
 Rimuove il nome della classe come nuove provider per il calendario
 </summary>
	<param name="pName"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CMdfDbConnection.DataSouce">
	<summary>
 Restituisce o imposta il nome dell'istanza di SQL Server a cui connettersi
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CMdfDbConnection.ConnectionTimeOut">
	<summary>
 Restituisce o imposta il valore in secondi del timeout per il tentativo di connessione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.SMSService.SMSDriverOptions.Mittente">
	<summary>
 Restituisce o imposta il numero o il nome del mittente visualizzato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.SMSService.SMSDriverOptions.RichiediConfermaDiLettura">
	<summary>
 Restituisce o importa un valore booleano che indica se è richiesta la conferma di lettura
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CCursorField.IsChanged">
	<summary>
 Restituisce vero se lo stato del campo è diverso da quello predefinito
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CLoginHistoryCursor">
	<summary>
 Cursore sulla tabella dei log di accesso
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguibile.Name">
	<summary>
 Nome dell'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguibile.Description">
	<summary>
 Descrizione dell'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.AzioneEseguibile.Execute(FinSeA.Sistema.Notifica,System.String)">
	<summary>
 Esegue l'azione
 </summary>
	<param name="notifica"></param>
	<param name="parameters"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.AzioneEseguibile.Render(FinSeA.Sistema.Notifica,System.Object)">
	<summary>
 Metodo eventualmente richiamato dall'interfaccia dell'applicazione per generare l'interfaccia utente relativa all'azione
 </summary>
	<param name="notifica"></param>
	<param name="context"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.AzioneEseguibile">
	<summary>
 Rappresenta un'azione possibile su una notifica di sistema
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap.#ctor">
	<summary>
 Constructs a new, empty tree map, using the natural ordering of its keys.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap.#ctor(System.Collections.Generic.IComparer{System.Object})">
	<summary>
 Constructs a new, empty tree map, ordered according to the given comparator.
 </summary>
	<param name="comparator"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap.#ctor(FinSeA.Map)">
	<summary>
 Constructs a new tree map containing the same mappings as the given map, ordered according to the natural ordering of its keys.
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap.#ctor(FinSeA.SortedMap)">
	<summary>
 Constructs a new tree map containing the same mappings and using the same ordering as the specified sorted map.
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectCursorBase.Clear">
	<summary>
 Elimina tutti i vincoli impostati per i campi e per le clausole where poi resetta il cursore
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBObjectCursorBase.Token">
	<summary>
 Restituisce o impostau na stringa che identifica univocamente il cursore
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectCursorBase.GetConnection">
	<summary>
 Restituisce la connessione al database predefinito per questo tipo di oggetto
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectCursorBase.OnInitialize(System.Object)">
	<summary>
 Metodo chiamato per inizializzare l'oggetto in seguito alla chiamata al metodo Add 
 </summary>
	<param name="item"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.available">
	<summary>
 Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.mark(System.Int32)">
	<summary>
 Marks the current position in this input stream.
 </summary>
	<param name="readlimit"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.markSupported">
	<summary>
 Tests if this input stream supports the mark and reset methods.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.read">
	<summary>
 Reads the next byte of data from the input stream.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.read(System.Byte[])">
	<summary>
 Reads some number of bytes from the input stream and stores them into the buffer array b.
 </summary>
	<param name="b"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.reset">
	<summary>
 Repositions this stream to the position at the time the mark method was last called on this input stream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.InputStream.skip(System.Int64)">
	<summary>
 Skips over and discards n bytes of data from this input stream.
 </summary>
	<param name="n"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleActions.RegisterAction(System.String)">
	<summary>
 Registra una nuova azione per il modulo specificato. Se l'azione esiste già restituisce quella già registrata
 </summary>
	<param name="actionName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleActions.UnregisterAction(System.Int32)">
	<summary>
 Rimuove l'azione corrispondente all'ID specifico
 </summary>
	<param name="actionID"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleActions.UnregisterAction(FinSeA.Sistema.CModuleAction)">
	<summary>
 Rimuove l'azione
 </summary>
	<param name="a"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleActions.UnregisterAction(System.String)">
	<summary>
 Rimuove l'azione specifica del modulo
 </summary>
	<param name="actionName"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleActions.IsRegisteredAction(System.String)">
	<summary>
 Restituisce vero se il modu
 </summary>
	<param name="actionName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CBBAN_IT">
	<summary>
 Classe che rappresenta un codice BBAN intaliano
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.ceiling(System.Object)">
	<summary>
 Returns the least element in this set greater than or equal to the given element, or null if there is no such element.
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.descendingIterator">
	<summary>
 Returns an iterator over the elements in this set, in descending order.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.descendingSet">
	<summary>
 Returns a reverse order view of the elements contained in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.floor(System.Object)">
	<summary>
 Returns the greatest element in this set less than or equal to the given element, or null if there is no such element.
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.headSet(System.Object,System.Boolean)">
	<summary>
 Returns a view of the portion of this set whose elements are less than (or equal to, if inclusive is true) toElement.
 </summary>
	<param name="toElement"></param>
	<param name="inclusive"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.higher(System.Object)">
	<summary>
 Returns the least element in this set strictly greater than the given element, or null if there is no such element.
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.lower(System.Object)">
	<summary>
 Returns the greatest element in this set strictly less than the given element, or null if there is no such element.
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.pollFirst">
	<summary>
 Retrieves and removes the first (lowest) element, or returns null if this set is empty.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.pollLast">
	<summary>
 Retrieves and removes the last (highest) element, or returns null if this set is empty.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.subSet(System.Object,System.Boolean,System.Object,System.Boolean)">
	<summary>
 Returns a view of the portion of this set whose elements range from fromElement to toElement.
 </summary>
	<param name="fromElement"></param>
	<param name="fromInclusive"></param>
	<param name="toElement"></param>
	<param name="toInclusive"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.NavigableSet.tailSet(System.Object,System.Boolean)">
	<summary>
 Returns a view of the portion of this set whose elements are greater than (or equal to, if inclusive is true) fromElement.
 </summary>
	<param name="fromElement"></param>
	<param name="inclusive"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.NavigableSet">
	<summary>
 A SortedSet extended with navigation methods reporting closest matches for given search targets. Methods lower, floor, ceiling, and higher return elements respectively less than, less than or equal, greater than or equal, and greater than a given element, returning null if there is no such element. A NavigableSet may be accessed and traversed in either ascending or descending order. The descendingSet method returns a view of the set with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. This interface additionally defines methods pollFirst and pollLast that return and remove the lowest and highest element, if one exists, else returning null. Methods subSet, headSet, and tailSet differ from the like-named SortedSet methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Subsets of any NavigableSet must implement the NavigableSet interface.
 The return values of navigation methods may be ambiguous in implementations that permit null elements. However, even in this case the result can be disambiguated by checking contains(null). To avoid such issues, implementations of this interface are encouraged to not permit insertion of null elements. (Note that sorted sets of Comparable elements intrinsically do not permit null.)
 Methods subSet(E, E), headSet(E), and tailSet(E) are specified to return SortedSet to allow existing implementations of SortedSet to be compatibly retrofitted to implement NavigableSet, but extensions and implementations of this interface are encouraged to override these methods to return NavigableSet.
 This interface is a member of the Java Collections Framework.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.add(System.Object)">
	<summary>
 Appends the specified element to the end of this list (optional operation).
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.addAll(FinSeA.ICollection)">
	<summary>
 Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.clear">
	<summary>
 Removes all of the elements from this list (optional operation).
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.contains(System.Object)">
	<summary>
 Returns true if this list contains the specified element.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.containsAll(FinSeA.ICollection)">
	<summary>
 Returns true if this list contains all of the elements of the specified collection.
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.equals(System.Object)">
	<summary>
 Compares the specified object with this list for equality.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.hashCode">
	<summary>
 Returns the hash code value for this list.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.isEmpty">
	<summary>
 Returns true if this list contains no elements.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.iterator">
	<summary>
 Returns an iterator over the elements in this list in proper sequence.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.remove(System.Object)">
	<summary>
 Removes the first occurrence of the specified element from this list, if it is present (optional operation).
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.removeAll(FinSeA.ICollection)">
	<summary>
 Removes from this list all of its elements that are contained in the specified collection (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.retainAll(FinSeA.ICollection)">
	<summary>
 Retains only the elements in this list that are contained in the specified collection (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.size">
	<summary>
 Returns the number of elements in this list.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.toArray">
	<summary>
 Returns an array containing all of the elements in this list in proper sequence (from first to last element).
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection.toArray``1">
	<summary>
 Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
 </summary>
	<typeparam name="T"></typeparam>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Properties.propertyNames">
	<summary>
  Returns an enumeration of all the keys in this property list, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.GetUniqueID">
	<summary>
 Restituisce una stringa che identifica univocamente il driver
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.SMSService.BasicSMSDriver.Description">
	<summary>
 Restituisce un nome descrittivo per il driver
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.Send(System.String,System.String,FinSeA.Sistema.SMSService.SMSDriverOptions)">
	<summary>
 Invia al numero specificato un fax (ciascuna pagina è contenuta in una singola immagine) utilizzando il sistema predefinito per l'invio
 </summary>
	<param name="destNumber"></param>
	<param name="testo"></param>
	<returns>Restituisce un ID con cui è possibile recuperare lo stato del messaggio</returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.GetStatus(System.String)">
	<summary>
 Invia al numero specificato un fax (ciascuna pagina è contenuta in una singola immagine) utilizzando il sistema predefinito per l'invio
 </summary>
	<param name="messageID">ID del messaggio restituito dalla funzione Send</param>
	<returns>Restituisce un ID con cui è possibile recuperare lo stato del messaggio</returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.GetDefaultOptions">
	<summary>
 Restituisce le impostazioni predefinite del driver
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.SupportaConfermaDiRecapito">
	<summary>
 Quando sottoposto ad override in una classe derivata restituisce vero se il driver supporta la conferma di lettura
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.SupportaMessaggiConcatenati">
	<summary>
 Restituisce vero se il sistema supporta la concatenzaione dei messaggi
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.GetMaxSMSLen">
	<summary>
 Restituisce la lunghezza massima di un SMS
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.GetSMSTextLen(System.String)">
	<summary>
 Restituisce il numero di caratteri conteggiati per l'invio dell'SMS
 </summary>
	<param name="text"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.BasicSMSDriver.CountRequiredSMS(System.String)">
	<summary>
 Restituisce il numero di SMS concatenati necessari per inviare il testo
 </summary>
	<param name="text"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CIntervalloCAPCursor">
	<summary>
 Cursore sulla tabella degli intervalli CAP
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CIntervalliCAP">
	<summary>
 Collezione di CAP assegnati ad un comune
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CRegisteredPropertyPage">
	<summary>
 Pagina di proprietà registrata per un oggetto
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.NFloat">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Single) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.CReadOnlyCollection.Comparer">
	<summary>
 Restituisce o imposta l'oggetto che viene utilizzato per l'ordinamento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.CReadOnlyCollection.GetItemById(System.Int32)">
	<summary>
 Cerca e restituisce all'interno della collezione l'oggetto con l'ID specificato
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.CReadOnlyCollection.Sorted">
	<summary>
 Restituisce o imposta un valore booleano che indica se la collezione è ordinata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CEMailerClass.EmbedResources(System.Net.Mail.MailMessage)">
	<summary>
 Rimuove tutti i collegamenti esterni e li incorpora nel corpo del messaggio secondo la codifica MIME opportuna
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CEMailerClass.SendMessage(System.Net.Mail.MailMessage)">
	<summary>
 Invia il messaggio con i parametri di invio predefiniti
 </summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXGroupCollection">
	<summary>
 Collezione dei moduli definiti per il gruppo
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CUserAuthorizationCursor">
	<summary>
 Cursore sulla tabella delle autorizzazione utente
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CImpiegatiCursor">
	<summary>
 Cursore sulla tabella degli impiegati
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CImpieghi">
	<summary>
 Collezione di impieghi di una persona
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.Categoria">
	<summary>
 Restituisce o imposta la categoria del ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.DettaglioStato">
	<summary>
 Restituisce o imposta delle informazioni aggiuntive sull'esito del ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.NomeLista">
	<summary>
 Restituisce o imposta il nome della coda di ricontatti a cui appartiene questo oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.DataPrevista">
	<summary>
 Restituisce o imposta la data prevista per il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.Promemoria">
	<summary>
 Restituisce o imposta il promemoria in minuti
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.GiornataIntera">
	<summary>
 Restituisce o imposta un valore booleano che indica se il ricontatto deve essere effettuato ad un determinato orario
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.IDAssegnatoA">
	<summary>
 Restituisce o imposta l'ID dell'operatore che deve effettuare il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.AssegnatoA">
	<summary>
 Restituisce o imposta l'operatore che deve effettuare il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.NomeAssegnatoA">
	<summary>
 Restituisce o imposta il nome dell'operatore che deve effettuare il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.Note">
	<summary>
 Restituisce o imposta delle annotazioni
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.DataRicontatto">
	<summary>
 Restituisce o imposta la data in cui è stato effettuato il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.StatoRicontatto">
	<summary>
 Restituisce o imposta lo stato del ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.IDOperatore">
	<summary>
 Restituisce o imposta l'ID dell'operatore che ha effettuato il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.Operatore">
	<summary>
 Restituisce o imposta l'operatore che ha effettuato il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.NomeOperatore">
	<summary>
 Restituisce o imposta il nome dell'operatore che ha effettuato il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.TipoContatto">
	<summary>
 Restituisce o imposta il tipo del contatto generato a partire da questo ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.IDContatto">
	<summary>
 Restituisce o imposta l'ID del contatto generato da questo ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.IDPersona">
	<summary>
 Restituisce o imposta l'ID della persona associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.Persona">
	<summary>
 Restituisce o imposta la persona associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.NomePersona">
	<summary>
 Restituisce o imposta il nominativo della persona associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.SourceName">
	<summary>
 Restitusice o imposta una stringa che indica la sorgente che ha creato questo ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRicontatto.SourceParam">
	<summary>
 Restitusice o imposta una stringa che identifica il contesto in cui la sorgente ha creato questo ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.NewTypeHandler.FindType(System.String)">
	<summary>
 Se la classe supporta il tipo specificato restituisce l'oggetto System.Type altrimenti restituisce NULL
 </summary>
	<param name="typeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.NewTypeHandler">
	<summary>
 Classe base che consente di installare nuovi tipi senza ricompilare
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeSet.#ctor">
	<summary>
 Constructs a new, empty tree set, sorted according to the natural ordering of its elements.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeSet.#ctor(FinSeA.ICollection)">
	<summary>
 Constructs a new tree set containing the elements in the specified collection, sorted according to the natural ordering of its elements.
 </summary>
	<param name="c"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeSet.#ctor(System.Collections.IComparer)">
	<summary>
 Constructs a new, empty tree set, sorted according to the specified comparator.
 </summary>
	<param name="comparator"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeSet.#ctor(FinSeA.SortedSet)">
	<summary>
 Constructs a new tree set containing the same elements and using the same ordering as the specified sorted set.
 </summary>
	<param name="s"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.TreeSet">
	<summary>
 A NavigableSet implementation based on a TreeMap. The elements are ordered using their natural ordering, or by a Comparator provided at set creation time, depending on which constructor is used.
 This implementation provides guaranteed log(n) time cost for the basic operations (add, remove and contains).
 Note that the ordering maintained by a set (whether or not an explicit comparator is provided) must be consistent with equals if it is to correctly implement the Set interface. (See Comparable or Comparator for a precise definition of consistent with equals.) This is so because the Set interface is defined in terms of the equals operation, but a TreeSet instance performs all element comparisons using its compareTo (or compare) method, so two elements that are deemed equal by this method are, from the standpoint of the set, equal. The behavior of a set is well-defined even if its ordering is inconsistent with equals; it just fails to obey the general contract of the Set interface.
 Note that this implementation is not synchronized. If multiple threads access a tree set concurrently, and at least one of the threads modifies the set, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the set. If no such object exists, the set should be "wrapped" using the Collections.synchronizedSortedSet method. This is best done at creation time, to prevent accidental unsynchronized access to the set:
    SortedSet s = Collections.synchronizedSortedSet(new TreeSet(...));
 The iterators returned by this class's iterator method are fail-fast: if the set is modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.
 Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.
 This class is a member of the Java Collections Framework.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.containsKey(`0)">
	<summary>
 Returns true if this map contains a mapping for the specified key.
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.containsValue(`1)">
	<summary>
 Returns true if this map maps one or more keys to the specified value.
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.entrySet">
	<summary>
 Returns a Set view of the mappings contained in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.get(`0)">
	<summary>
 Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.
 </summary>
	<param name="v"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.keySet">
	<summary>
 Returns a Set view of the keys contained in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.put(`0,`1)">
	<summary>
 Associates the specified value with the specified key in this map (optional operation).
 </summary>
	<param name="p1"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.putAll(FinSeA.Map{`0,`1})">
	<summary>
 Copies all of the mappings from the specified map to this map (optional operation).
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Map`2.remove(`0)">
	<summary>
 Removes the mapping for a key from this map if it is present (optional operation).
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Map`2.Values">
	<summary>
 Returns a Collection view of the values contained in this map.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Map`2">
	<summary>
 public interface Map(K,V)
 An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value.
 This interface takes the place of the Dictionary class, which was a totally abstract class rather than an interface.
 The Map interface provides three collection views, which allow a map's contents to be viewed as a set of keys, collection of values, or set of key-value mappings. The order of a map is defined as the order in which the iterators on the map's collection views return their elements. Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not.
 Note: great care must be exercised if mutable objects are used as map keys. The behavior of a map is not specified if the value of an object is changed in a manner that affects equals comparisons while the object is a key in the map. A special case of this prohibition is that it is not permissible for a map to contain itself as a key. While it is permissible for a map to contain itself as a value, extreme caution is advised: the equals and hashCode methods are no longer well defined on such a map.
 All general-purpose map implementation classes should provide two "standard" constructors: a void (no arguments) constructor which creates an empty map, and a constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument. In effect, the latter constructor allows the user to copy any map, producing an equivalent map of the desired class. There is no way to enforce this recommendation (as interfaces cannot contain constructors) but all of the general-purpose map implementations in the JDK comply.
 The "destructive" methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw UnsupportedOperationException if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an UnsupportedOperationException if the invocation would have no effect on the map. For example, invoking the putAll(Map) method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be "superimposed" is empty.
 Some map implementations have restrictions on the keys and values they may contain. For example, some implementations prohibit null keys and values, and some have restrictions on the types of their keys. Attempting to insert an ineligible key or value throws an unchecked exception, typically NullPointerException or ClassCastException. Attempting to query the presence of an ineligible key or value may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible key or value whose completion would not result in the insertion of an ineligible element into the map may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as "optional" in the specification for this interface.
 This interface is a member of the Java Collections Framework.
 Many methods in Collections Framework interfaces are defined in terms of the equals method. For example, the specification for the containsKey(Object key) method says: "returns true if and only if this map contains a mapping for a key k such that (key==null ? k==null : key.equals(k))." This specification should not be construed to imply that invoking Map.containsKey with a non-null argument key will cause key.equals(k) to be invoked for any key k. Implementations are free to implement optimizations whereby the equals invocation is avoided, for example, by first comparing the hash codes of the two keys. (The Object.hashCode() specification guarantees that two objects with unequal hash codes cannot be equal.) More generally, implementations of the various Collections Framework interfaces are free to take advantage of the specified behavior of underlying Object methods wherever the implementor deems it appropriate.
 </summary>
	<typeparam name="TKey"></typeparam>
	<typeparam name="TValue"></typeparam>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.FaxService.FaxDeliver">
	<summary>
 Evento generato quando un Fax inviato cambia stato
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.FaxService.FaxReceived">
	<summary>
 Evento generato quando viene ricevuto un Fax
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FaxService.DefaultDriver">
	<summary>
 Restituisce o imposta il driver predefinito utilizzato per l'invio degli SMS
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FaxService.Send(System.String,System.String)">
	<summary>
 Invia al numero specificato un fax (ciascuna pagina è contenuta in una singola immagine) utilizzando il sistema predefinito per l'invio
 </summary>
	<param name="destNumber">[in] Numero di fax</param>
	<param name="fileName">[in] Nome del file da inviare come fax</param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FaxService.Send(FinSeA.Sistema.FaxService.BaseFaxDriver,System.String,System.String,FinSeA.Sistema.FaxService.FaxDriverOptions)">
	<summary>
 Invia al numero specificato un fax (ciascuna pagina è contenuta in una singola immagine) utilizzando il sistema predefinito per l'invio
 </summary>
	<param name="destNumber">[in] Numero di fax</param>
	<param name="fileName">[in] Nome del file da inviare come FAX</param>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXGroupCursor">
	<summary>
 Cursore sulla tabella dei moduli definiti per gruppo
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Comunicazioni.Notify(FinSeA.Comunicazioni.CComunicazione,System.String)">
	<summary>
 Crea un avviso per la ricezione della comunicazione
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Comunicazioni.GetNextAvailableProgressivo">
	<summary>
 Restituisce il primo numero progressivo disponibile
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Comunicazioni.GetItemById(System.Int32)">
	<summary>
 Restituisce la comunicazione relativa all'ID specificato
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAppuntamento.Indirizzo">
	<summary>
 Restituisce o imposta l'indirizzo presso cui avverrà l'incontro
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAppuntamento.StatoAppuntamento">
	<summary>
 Restituisce o imposta lo stato dell'appuntamento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CAppuntamento">
	<summary>
 Rappresenta un appuntamento
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CCanale.Nome">
	<summary>
 Restituisce o imposta il nome della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CCanale.IconURL">
	<summary>
 Restituisce o imposta il percorso dell'immagine utilizzata come icona per la fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CCanale.Tipo">
	<summary>
 Restituisce o imposta il tipo della fonte (Radio, TV, Cartaceo, ecc)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CCanale.Valido">
	<summary>
 Restituisce o imposta un valore booleano che indica se il canale è valido
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CCanale">
	<summary>
 Rappresenta il canale usato per comunicare un contatto (diverso dalla fonte in quanto la fonte rappresenta il modo in cui la persona ci ha conosciuti, mentre il canale rappresenta chi ci ha comunicato il contatto)
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CFCalculator.Inverti">
	<summary>
 Se è stato inserito il codice fiscale inverte
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CFCalculator.Calcola">
	<summary>
 Calcola il codice fiscale
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CFCalculator">
	<summary>
 Classe che consente di calcolare il codice fiscale di una persona fisica
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersoneClass.SplitCognomeNome(System.String,System.String@,System.String@)">
	<summary>
 Data una stringa contenente il cognome ed il nome di una persona, tenta di separare i due componenti
 </summary>
	<param name="value"></param>
	<param name="cognome"></param>
	<param name="nome"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersoneClass.FindPF(System.String,System.Boolean,System.Nullable{System.Int32},System.Boolean)">
	<summary>
 Restituisce una collezione di oggetto CPersonaInfo contenete le sole persone fisiche corrispondenti ai parametri di ricerca specificati
 </summary>
	<param name="param"></param>
	<param name="ignoreRights"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersoneClass.FindAZ(System.String,System.Boolean,System.Nullable{System.Int32},System.Boolean)">
	<summary>
 Restituisce una collezione di oggetto CPersonaInfo contenete le sole aziende corrispondenti ai parametri di ricerca specificati
 </summary>
	<param name="param"></param>
	<param name="ignoreRights"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersoneClass.GetCompleanniDi(System.DateTime)">
	<summary>
 Restituisce l'elenco delle persone che compiono gli anni 
 </summary>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CCalendarActivitiesProvider">
	<summary>
 Classe base del provider di attività del calendario
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.UNA_VOLTA">
	<summary>
 L'evento viene eseguito una sola volta all'istante pianificato
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.OGNI_N_GIORNI">
	<summary>
 L'evento viene eseguito ogni N giorni all'orario pianificato
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.OGNI_N_SETTIMANE">
	<summary>
 L'evento viene eseguito ogni N settimane nel giorno e all'orario specificato
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.OGNI_N_MESI">
	<summary>
 L'evento viene eseguito ogni mese nel giorno e all'orario specificato
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.OGNI_N_ANNI">
	<summary>
 L'evento viene eseguito ogni anno nel giorno e all'orario specificato
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.ULTIMO_DEL_MESE">
	<summary>
 L'evento viene eseguito ogni ultimo giorno del mese
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.PRIMO_X_DEL_MESE">
	<summary>
 L'evento viene eseguito ogni primo [lun, ..., dom] del mese
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.ULTIMO_X_DEL_MESE">
	<summary>
 L'evento viene eseguito ogni ultimo [lun, ..., dom] del mese
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.PRIMO_X_DELL_ANNO">
	<summary>
 L'evento viene eseguito ogni primo [lun, ..., dom] dell'anno
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.ScheduleType.ULTIMO_X_DELL_ANNO">
	<summary>
 L'evento viene eseguito ogni ultimo [lun, ..., dom] dell'anno
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CalendarSchedule.ScheduleType">
	<summary>
 Restituisce o imposta un valore che indica il tipo di programmazione dell'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CalendarSchedule.DataInizio">
	<summary>
 Restituisce o imposta la data di inizio dell'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CalendarSchedule.DataFine">
	<summary>
 Restituisce o imposta la data finale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CalendarSchedule.Intervallo">
	<summary>
 Restituisce o imposta l'intervallo tra gli eventi
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CalendarSchedule.NumeroRipetizioni">
	<summary>
 Restituisce o imposta il numero di ripetizioni da effettuare
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CalendarSchedule">
	<summary>
 Classe che rappresenta una programmazione temporale
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.#ctor">
	<summary>
 Constructs an empty insertion-ordered LinkedHashMap instance with the default initial capacity (16) and load factor (0.75).
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.#ctor(System.Int32)">
	<summary>
   Constructs an empty insertion-ordered LinkedHashMap instance with the specified initial capacity and a default load factor (0.75).
 </summary>
	<param name="initialCapacity"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.#ctor(System.Int32,System.Single)">
	<summary>
  Constructs an empty insertion-ordered LinkedHashMap instance with the specified initial capacity and load factor.
 </summary>
	<param name="initialCapacity"></param>
	<param name="loadFactor"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.#ctor(System.Int32,System.Single,System.Boolean)">
	<summary>
  Constructs an empty LinkedHashMap instance with the specified initial capacity, load factor and ordering mode.
 </summary>
	<param name="initialCapacity"></param>
	<param name="loadFactor"></param>
	<param name="accessorOrder"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.#ctor(FinSeA.Map)">
	<summary>
  Constructs an insertion-ordered LinkedHashMap instance with the same mappings as the specified map.
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap`2.removeEldestEntry(System.Collections.Generic.KeyValuePair{`0,`1})">
	<summary>
 Returns true if this map should remove its eldest entry.
 </summary>
	<param name="eldest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.LinkedHashMap`2">
	<summary>
 public class LinkedHashMap
 extends HashMap 
 implements Map
 Hash table and linked list implementation of the Map interface, with predictable iteration order. This implementation differs from HashMap in that it maintains a doubly-linked list running through all of its entries. This linked list defines the iteration ordering, which is normally the order in which keys were inserted into the map (insertion-order). Note that insertion order is not affected if a key is re-inserted into the map. (A key k is reinserted into a map m if m.put(k, v) is invoked when m.containsKey(k) would return true immediately prior to the invocation.)
 This implementation spares its clients from the unspecified, generally chaotic ordering provided by HashMap (and Hashtable), without incurring the increased cost associated with TreeMap. It can be used to produce a copy of a map that has the same order as the original, regardless of the original map's implementation:
      void foo(Map m) {
          Map copy = new LinkedHashMap(m);
          ...
      }
 This technique is particularly useful if a module takes a map on input, copies it, and later returns results whose order is determined by that of the copy. (Clients generally appreciate having things returned in the same order they were presented.)
 A special constructor is provided to create a linked hash map whose order of iteration is the order in which its entries were last accessed, from least-recently accessed to most-recently (access-order). This kind of map is well-suited to building LRU caches. Invoking the put or get method results in an access to the corresponding entry (assuming it exists after the invocation completes). The putAll method generates one entry access for each mapping in the specified map, in the order that key-value mappings are provided by the specified map's entry set iterator. No other methods generate entry accesses. In particular, operations on collection-views do not affect the order of iteration of the backing map.
 The removeEldestEntry(Map.Entry) method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.
 This class provides all of the optional Map operations, and permits null elements. Like HashMap, it provides constant-time performance for the basic operations (add, contains and remove), assuming the hash function disperses elements properly among the buckets. Performance is likely to be just slightly below that of HashMap, due to the added expense of maintaining the linked list, with one exception: Iteration over the collection-views of a LinkedHashMap requires time proportional to the size of the map, regardless of its capacity. Iteration over a HashMap is likely to be more expensive, requiring time proportional to its capacity.
 A linked hash map has two parameters that affect its performance: initial capacity and load factor. They are defined precisely as for HashMap. Note, however, that the penalty for choosing an excessively high value for initial capacity is less severe for this class than for HashMap, as iteration times for this class are unaffected by capacity.
 Note that this implementation is not synchronized. If multiple threads access a linked hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be "wrapped" using the Collections.synchronizedMap method. This is best done at creation time, to prevent accidental unsynchronized access to the map:
    Map m = Collections.synchronizedMap(new LinkedHashMap(...));
 A structural modification is any operation that adds or deletes one or more mappings or, in the case of access-ordered linked hash maps, affects iteration order. In insertion-ordered linked hash maps, merely changing the value associated with a key that is already contained in the map is not a structural modification. In access-ordered linked hash maps, merely querying the map with get is a structural modification.)
 The iterators returned by the iterator method of the collections returned by all of this class's collection view methods are fail-fast: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove method, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.
 Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.
 This class is a member of the Java Collections Framework. 
 </summary>
	<typeparam name="TKey"></typeparam>
	<typeparam name="TValue"></typeparam>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.Name">
	<summary>
 Stringa che identifica l'oggetto (nome della funzione, query, ecc...)
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.Count">
	<summary>
 Conteggio di esecuzione
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.UserID">
	<summary>
 ID dell'utente che ha eseguito la query, funzione, ecc..
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.UserName">
	<summary>
 Nome dell'utente che ha eseguito la query, funzione, ecc
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.ExecTime">
	<summary>
 Tempo di esecuzione
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.MaxExecTime">
	<summary>
 Tempo massimo di esecuzione
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.StatsItem.LastRun">
	<summary>
 Data ed ora dell'ultima esecuzione
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.close">
	<summary>
 Closes this random access file stream and releases any system resources associated with the stream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.getChannel">
	<summary>
 Returns the unique FileChannel object associated with this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.getFD">
	<summary>
 Returns the opaque file descriptor object associated with this stream.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.getFilePointer">
	<summary>
 Returns the current offset in this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.length">
	<summary>
 Returns the length of this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.read">
	<summary>
 Reads a byte of data from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.read(System.Byte[])">
	<summary>
 Reads up to b.length bytes of data from this file into an array of bytes.
 </summary>
	<param name="b"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.read(System.Byte[],System.Int32,System.Int32)">
	<summary>
 Reads up to len bytes of data from this file into an array of bytes.
 </summary>
	<param name="b"></param>
	<param name="off"></param>
	<param name="len"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readBoolean">
	<summary>
 Reads a boolean from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readByte">
	<summary>
 Reads a signed eight-bit value from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readChar">
	<summary>
 Reads a character from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readDouble">
	<summary>
 Reads a double from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readFloat">
	<summary>
 Reads a float from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readFully(System.Byte[])">
	<summary>
 Reads b.length bytes from this file into the byte array, starting at the current file pointer.
 </summary>
	<param name="b"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readFully(System.Byte[],System.Int32,System.Int32)">
	<summary>
 Reads exactly len bytes from this file into the byte array, starting at the current file pointer.
 </summary>
	<param name="b"></param>
	<param name="off"></param>
	<param name="len"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readInt">
	<summary>
 Reads a signed 32-bit integer from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readLine">
	<summary>
 Reads the next line of text from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readLong">
	<summary>
 Reads a signed 64-bit integer from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readShort">
	<summary>
 Reads a signed 16-bit number from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readUnsignedByte">
	<summary>
 Reads an unsigned eight-bit number from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readUnsignedShort">
	<summary>
 Reads an unsigned 16-bit number from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.readUTF">
	<summary>
 Reads in a string from this file.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.seek(System.Int64)">
	<summary>
 Sets the file-pointer offset, measured from the beginning of this file, at which the next read or write occurs.
 </summary>
	<param name="pos"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.setLength(System.Int64)">
	<summary>
 Sets the length of this file.
 </summary>
	<param name="newLength"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.skipBytes(System.Int32)">
	<summary>
 Attempts to skip over n bytes of input discarding the skipped bytes.
 </summary>
	<param name="n"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.write(System.Byte[])">
	<summary>
 Writes b.length bytes from the specified byte array to this file, starting at the current file pointer.
 </summary>
	<param name="b"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.write(System.Byte[],System.Int32,System.Int32)">
	<summary>
 Writes len bytes from the specified byte array starting at offset off to this file.
 </summary>
	<param name="b"></param>
	<param name="off"></param>
	<param name="len"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.write(System.Int32)">
	<summary>
 Writes the specified byte to this file.
 </summary>
	<param name="b"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeBoolean(System.Boolean)">
	<summary>
 Writes a boolean to the file as a one-byte value.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeByte(System.Int32)">
	<summary>
 Writes a byte to the file as a one-byte value.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeBytes(System.String)">
	<summary>
 Writes the string to the file as a sequence of bytes.
 </summary>
	<param name="s"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeChar(System.Char)">
	<summary>
 Writes a char to the file as a two-byte value, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeChars(System.String)">
	<summary>
 Writes a string to the file as a sequence of characters.
 </summary>
	<param name="s"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeDouble(System.Double)">
	<summary>
 Converts the double argument to a long using the doubleToLongBits method in class Double, and then writes that long value to the file as an eight-byte quantity, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeFloat(System.Single)">
	<summary>
 Converts the float argument to an int using the floatToIntBits method in class Float, and then writes that int value to the file as a four-byte quantity, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeInt(System.Int32)">
	<summary>
 Writes an int to the file as four bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeLong(System.Int64)">
	<summary>
 Writes a long to the file as eight bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeShort(System.Int16)">
	<summary>
 Writes a short to the file as two bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.RandomAccessFile.writeUTF(System.String)">
	<summary>
 Writes a string to the file using modified UTF-8 encoding in a machine-independent manner.
 </summary>
	<param name="str"></param>
	<remarks></remarks>
</member><member name="F:FinSeA.Io.PushBackInputStream.buf">
	<summary>
 The pushback buffer.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Io.PushBackInputStream.pos">
	<summary>
 The position within the pushback buffer from which the next byte will be read.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.PushBackInputStream">
	<summary>
 A PushbackInputStream adds functionality to another input stream, namely the ability to "push back" or "unread" one byte. This is useful in situations where it is convenient for a fragment of code to read an indefinite number of data bytes that are delimited by a particular byte value; after reading the terminating byte, the code fragment can "unread" it, so that the next read operation on the input stream will reread the byte that was pushed back. For example, bytes representing the characters constituting an identifier might be terminated by a byte representing an operator character; a method whose job is to read just an identifier can read until it sees the operator and then push the operator back to be re-read.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.RegisteredEventHandlerCursor">
	<summary>
 Cursore sulla tabella dei gestori di eventi registrati 
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredEventHandlersClass.Register(System.Object,FinSeA.Sistema.CModule,System.String)">
	<summary>
 Registra un gestore di eventi
 </summary>
	<param name="handler"></param>
	<param name="m"></param>
	<param name="eventName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredEventHandlersClass.Unregister(System.Object,FinSeA.Sistema.CModule,System.String)">
	<summary>
 Cancella un gestore di eventi
 </summary>
	<param name="handler"></param>
	<param name="m"></param>
	<param name="eventName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CRegisteredEventHandlersClass.GetHandlers(FinSeA.Sistema.CModule,System.String)">
	<summary>
 Restituisce la collezione di handlers registrati per l'evento specifico del modulo
 </summary>
	<param name="m"></param>
	<param name="eventName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CRegisteredEventHandlersClass">
	<summary>
 Accede al modulo degli eventi registrati
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CEventsCursor">
	<summary>
 Cursore sulla tabella degli eventi
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CUfficiClass.GetItemByName(System.String)">
	<summary>
 Restituisce un oggetto CUfficio in base al suo nome
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Categoria">
	<summary>
 Restituisce o imposta la categoria del ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.IconURL">
	<summary>
 Restituisce o imposta l'icona associata al contatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.GiornataIntera">
	<summary>
 Vero se si tratta di un evento per cui non è stato fissato un orario particolare
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.PersonaGiuridica">
	<summary>
 Vero se la persona è una persona giuridica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.IDRicontatto">
	<summary>
 ID del ricontatto corrispondente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Ricontatto">
	<summary>
 Ricontatto corrispondente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.PersonID">
	<summary>
 ID della persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Person">
	<summary>
 Persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Nominativo">
	<summary>
 Nominativo della persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Activities">
	<summary>
 Azioni possibili sul ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Data">
	<summary>
 Data per cui è stato fissato il ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Notes">
	<summary>
 Informazioni sul ricontatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.Promemoria">
	<summary>
 Promemoria in minuti
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CActivePerson.MoreInfo">
	<summary>
 Eventuali informazioni aggiuntive
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CActivePerson">
	<summary>
 Rappresenta una persona "attiva" cioè per cui è stata definita almeno una attività nel calendario
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CCalendarActivityInfo">
	<summary>
 Racchiude alcune info sui contatti
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap`2.#ctor">
	<summary>
 Constructs a new, empty tree map, using the natural ordering of its keys.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap`2.#ctor(System.Collections.Generic.IComparer{`0})">
	<summary>
 Constructs a new, empty tree map, ordered according to the given comparator.
 </summary>
	<param name="comparator"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap`2.#ctor(FinSeA.Map{`0,`1})">
	<summary>
 Constructs a new tree map containing the same mappings as the given map, ordered according to the natural ordering of its keys.
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.TreeMap`2.#ctor(FinSeA.SortedMap{`0,`1})">
	<summary>
 Constructs a new tree map containing the same mappings and using the same ordering as the specified sorted map.
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBReader.Schema">
	<summary>
 Restituisce lo schema sottostante
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBReader.Prefix">
	<summary>
 Restituisce o imposta una stringa che viene anteposta al nome dei campi
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBReader.Read">
	<summary>
 Se il cursore non si trova oltre la fine del file carica il record corrente e restituisce vero altrimenti restituisce falso
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBReader.IsNull(System.String)">
	<summary>
 Restituisce vero se il campo specificato contiene il valore DBNull
 </summary>
	<param name="fieldName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.IDNotifica">
	<summary>
 Restituisce l'ID della notifica associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.Notifica">
	<summary>
 Restituisce la notifica associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.Azione">
	<summary>
 Restituisce l'azione eseguita
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.DataEsecuzione">
	<summary>
 Restituisce o imposta la data di esecuzione dell'handler
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.Parameters">
	<summary>
 Restituisce una stringa descrittiva dei parametri di esecuzione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneEseguita.Results">
	<summary>
 Restituisce o imposta una stringa descrittiva dei risultati
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.AzioneEseguita">
	<summary>
 Rappresenta il risultato di un'azione eseguita su una notifica
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.BigInteger">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Long) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.NChar">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Char) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBObjectPO.IDPuntoOperativo">
	<summary>
 Restituisce o imposta l'ID del punto operativo a cui è assegnato l'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBObjectPO.NomePuntoOperativo">
	<summary>
 Restituisce o imposta il nome del punto operativo a cui è assegnato l'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBObjectPO.PuntoOperativo">
	<summary>
 Restituisce o imposta l'oggetto Ufficio che rappresenta il punto operativo a cui è assegnato l'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Databases.DBObjectPO">
	<summary>
 Estende l'oggetto DBObject con informazioni sul punto operativo a cui è assegnato l'oggetto
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CGroupAuthorizationCursor">
	<summary>
 Cursore sulla tabella delle autorizzazione di gruppo
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CDefinedActions">
	<summary>
 Collezione di tutte le azione definite sui moduli
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModulesClass.DefinedActions">
	<summary>
 Restituisce la collezione delle azioni definite su tutti i moduli
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModulesClass.GetUserModules(FinSeA.Sistema.CUser)">
	<summary>
 Restituisce i moduli visibili all'utente
 </summary>
	<param name="user"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupsClass.CKnownGroupsClass.Administrators">
	<summary>
 Restituisce il gruppo predefinito Administrators
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupsClass.CKnownGroupsClass.Guests">
	<summary>
 Restituisce il gruppo predefinito degli utenti non connessi
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupsClass.CKnownGroupsClass.Users">
	<summary>
 Restituisce il gruppo predefinito degli utenti definiti
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.Name">
	<summary>
 Restituisce o imposta il nome del backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.FileName">
	<summary>
 Restituisce o imposta il nome del file in cui è memorizzato il backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.FileDate">
	<summary>
 Restituisce o imposta la data e l'ora di creazione del file di backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.FileSize">
	<summary>
 Restituisce o imposta la dimensione in bytes del file di backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.LogMessages">
	<summary>
 Restituisce l'output 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.CBackup.ExecTime">
	<summary>
 Restituisce il tempo di esecuzione del backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.CBackup.Create">
	<summary>
 Effettua il backup
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.CBackup.Restore">
	<summary>
 Ripristina tutti i files
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.CBackup.Destroy">
	<summary>
 Elimina i file di backup e cancella la registrazione nel DB
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.Progressivo">
	<summary>
 Restituisce o imposta il numero progressivo del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.DataInizio">
	<summary>
 Restituisce o imposta la data di inizio validità del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.DataFine">
	<summary>
 Restituisce o imposta la data di fine validità del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.Categoria">
	<summary>
 Restituisce o imposta la categoria del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.Descrizione">
	<summary>
 Restituisce o imposta la descrizione del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.Priorita">
	<summary>
 Restituisce o imposta il livello di priorità del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.URL">
	<summary>
 Restituisce o imposta la URL del collegamento esterno
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.PrimaPagina">
	<summary>
 Restituisce o imposta un valore booleano che indica se il documento deve essere visualizzato nell'elenco delle comunicazioni
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Comunicazioni.CComunicazione.Note">
	<summary>
 Restituisce o imposta le note
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Comunicazioni.CComunicazione.GetAffectedUsers">
	<summary>
 Restituisce un oggetto CCollection contenente gli utenti interessati alla modifica
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Comunicazioni.CComunicazione">
	<summary>
 Rappresenta un documento o una comunicazione pubblicata sul sito
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.comparator">
	<summary>
 Returns the comparator used to order the elements in this set, or null if this set uses the natural ordering of its elements.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.first">
	<summary>
 Returns the first (lowest) element currently in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.last">
	<summary>
 Returns the last (highest) element currently in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.headSet(`0)">
	<summary>
 Returns a view of the portion of this set whose elements are strictly less than toElement.
 </summary>
	<param name="toElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.tailSet(`0)">
	<summary>
 Returns a view of the portion of this set whose elements are greater than or equal to fromElement.
 </summary>
	<param name="fromElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet`1.subSet(`0,`0)">
	<summary>
 Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.
 </summary>
	<param name="fromElement"></param>
	<param name="toElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.comparator">
	<summary>
 Returns the comparator used to order the elements in this set, or null if this set uses the natural ordering of its elements.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.first">
	<summary>
 Returns the first (lowest) element currently in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.last">
	<summary>
 Returns the last (highest) element currently in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.headSet(System.Object)">
	<summary>
 Returns a view of the portion of this set whose elements are strictly less than toElement.
 </summary>
	<param name="toElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.tailSet(System.Object)">
	<summary>
 Returns a view of the portion of this set whose elements are greater than or equal to fromElement.
 </summary>
	<param name="fromElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedSet.subSet(System.Object,System.Object)">
	<summary>
 Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.
 </summary>
	<param name="fromElement"></param>
	<param name="toElement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector`1.capacityIncrement">
	<summary>
  The amount by which the capacity of the vector is automatically incremented when its size becomes greater than its capacity.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector`1.elementCount">
	<summary>
 The number of valid components in this Vector object.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector`1.elementData">
	<summary>
   The array buffer into which the components of the vector are stored.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.#ctor">
	<summary>
 Constructs an empty vector so that its internal data array has size 10 and its standard capacity increment is zero.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
	<summary>
  Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.
 </summary>
	<param name="c"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.#ctor(System.Int32)">
	<summary>
 Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.
 </summary>
	<param name="initialCapacity"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.#ctor(System.Int32,System.Int32)">
	<summary>
 Constructs an empty vector with the specified initial capacity and capacity increment.
 </summary>
	<param name="initialCapacity"></param>
	<param name="capacityIncrement"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.trimToSize">
	<summary>
 Trims the capacity of this vector to be the vector's current size.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.ToString">
	<summary>
 Returns a string representation of this Vector, containing the String representation of each element.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.setElementAt(`0,System.Int32)">
	<summary>
 Sets the component at the specified index of this vector to be the specified object.
 </summary>
	<param name="obj"></param>
	<param name="index"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector`1.removeAllElements">
	<summary>
 Removes all components from this vector and sets its size to zero.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Vector`1">
	<summary>
  The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a Vector can grow or shrink as needed to accommodate adding and removing items after the Vector has been created.
  Each vector tries to optimize storage management by maintaining a capacity and a capacityIncrement. The capacity is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of capacityIncrement. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.
  The Iterators returned by Vector's iterator and listIterator methods are fail-fast: if the Vector is structurally modified at any time after the Iterator is created, in any way except through the Iterator's own remove or add methods, the Iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the Iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Vector's elements method are not fail-fast.
  Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.
  As of the Java 2 platform v1.2, this class was retrofitted to implement the List interface, making it a member of the Java Collections Framework. Unlike the new collection implementations, Vector is synchronized. 
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CUserUffici.SameOffice(FinSeA.Sistema.CUser)">
	<summary>
 Restituisce vero se l'utente corrente condivide almeno un ufficio con l'utente specificato
 </summary>
	<param name="user"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CUserUffici">
	<summary>
 Collezione degli uffici a cui appartiene un utente
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBWriter.Update(System.Int32)">
	<summary>
 Informa l'oggetto che il record è stato salvato
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FaxService.BaseFaxDriver.GetUniqueID">
	<summary>
 Restituisce una stringa che identifica univocamente il driver
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FaxService.BaseFaxDriver.Description">
	<summary>
 Restituisce un nome descrittivo per il driver
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FaxService.BaseFaxDriver.Send(System.String,System.String,FinSeA.Sistema.FaxService.FaxDriverOptions)">
	<summary>
 Invia al numero specificato un fax (ciascuna pagina è contenuta in una singola immagine) utilizzando il sistema predefinito per l'invio
 </summary>
	<param name="destNumber"></param>
	<param name="fileName"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FaxService.BaseFaxDriver.GetDefaultOptions">
	<summary>
 Restituisce una nuova istanza delle impostazioni predefinite del driver
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CEventsClass.DispatchEvent(FinSeA.Sistema.CModule,System.String,System.String,System.Object)">
	<summary>
 Genera l'evento specificato
 </summary>
	<param name="m"></param>
	<param name="eventName"></param>
	<param name="parameters"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CEventsClass.DispatchEventAsync(FinSeA.Sistema.CModule,System.String,System.String,System.Object)">
	<summary>
 Genera l'evento specificato
 </summary>
	<param name="m"></param>
	<param name="eventName"></param>
	<param name="parameters"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.Nome">
	<summary>
 Restituisce o imposta il nome della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.IconURL">
	<summary>
 Restituisce o imposta il percorso dell'immagine utilizzata come icona per la fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.Tipo">
	<summary>
 Restituisce o imposta il tipo della fonte (Radio, TV, Cartaceo, ecc)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.DataInizio">
	<summary>
 Restituisce o imposta la data di inizio validità della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.DataFine">
	<summary>
 Restituisce o imposta la data di fine validità della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.Attiva">
	<summary>
 Restituisce o imposta un valore booleano che indica se la fonte è attiva
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.IDCampagna">
	<summary>
 Restituisce o imposta una stringa che identifica la campagna pubblicitaria a cui appartiene la fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.IDAnnuncio">
	<summary>
 Restituisce o imposta una stringa che identifica univocamente questa fonte in un database esterno
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.IDKeyWord">
	<summary>
 Restituisce o imposta la parola associata alla fonte (per campagne tipo google)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CFonte.Siti">
	<summary>
 Restituisce o imposta una stringa descrittiva
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CFonte">
	<summary>
 Rappresenta la fonte di un contatto, di una pratica o di una persona 
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CUtenteXUfficio">
	<summary>
 Relazione tra un utente ed un ufficio
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CUtentiXUfficioCursor">
	<summary>
 Cursore sulla tabella degli uffici
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CUfficiCursor">
	<summary>
 Cursore sulla tabella degli uffici
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.GetDefaultBackupFolder">
	<summary>
 Restituisce il percorso predefinito in cui vengono memorizzati i files di backup
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Backups.Configuration.BackupFolder">
	<summary>
 Restituisce o imposta il percorso in cui vengono memorizzati i files di backup
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.GetExcludedDirs">
	<summary>
 Restituisce un array contenente tutte le cartelle escluse dai backup
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.AddExcludedDir(System.String)">
	<summary>
 Aggiunge una cartella all'elenco delle cartelle escluse
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.RemoveExcludedDir(System.String)">
	<summary>
 Rimuove una cartella dall'elenco delle cartelle escluse dal backup
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.GetIncludedDirs">
	<summary>
 Restituisce un array contenente tutte le cartelle aggiuntive
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.AddIncludedDir(System.String)">
	<summary>
 Aggiunge una cartella all'elenco delle cartelle aggiuntive
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Backups.Configuration.RemoveIncludedDir(System.String)">
	<summary>
 Rimuove una cartella dall'elenco delle cartelle aggiuntive 
 </summary>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.IsFeriale(System.DateTime)">
	<summary>
 Restituisce vero se la data corrisponde ad un giorno feriale
 </summary>
	<param name="d"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.IsFestivo(System.DateTime)">
	<summary>
 Restituisce vero se la data corrisponde ad un giorno festivo
 </summary>
	<param name="d"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetGiorniFestivi(System.Int32)">
	<summary>
 Restituisce la collezione delle festività predefinite per l'anno
 </summary>
	<param name="anno"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetWeekDay(System.DateTime)">
	<summary>
 Restituisce un numero che indica il giorno della settimana
 </summary>
	<param name="d"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbUseSystem">
	<summary>
 Viene utilizzata l'impostazione API National Language Support (NLS).
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbSunday">
	<summary>
 Domenica (impostazione predefinita)
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbMonday">
	<summary>
 Lunedì
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbTuesday">
	<summary>
 Martedì
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbWednesday">
	<summary>
 Mercoledì
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbThursday">
	<summary>
 Giovedì
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbFriday">
	<summary>
 Venerdì
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CCalendarClass.vbFirstDayOfWeekEnum.vbSaturday">
	<summary>
 Sabato
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetPersonInfo(System.Int32)">
	<summary>
 Restituisce un oggetto CPersonActivitiesInfo che racchiude le inform
 </summary>
	<param name="personID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.CalcolaMesiTrascorsi(System.DateTime,System.DateTime)">
	<summary>
 Restituisce il numero di mesi trascorsi tra le due date
 </summary>
	<param name="today"></param>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.ContaFeriali(System.DateTime,System.DateTime,System.Boolean)">
	<summary>
 Restituisce il numero di giorni lavorativi compresi tra le due date (incluse)
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.CalcolaAnniTrascorsi(System.DateTime,System.DateTime)">
	<summary>
 Restituisce il numero di anni trascorsi tra le due date
 </summary>
	<param name="today"></param>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetFirstMonthDay(System.DateTime)">
	<summary>
 Restituisce il primo del mese corrente alla data specificata
 </summary>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetLastMonthDay(System.DateTime)">
	<summary>
 Restituisce l'ultimo del mese corrente alla data specificata
 </summary>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.PeriodoToDates(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Restituisce le date (al secondo) che rappresentano i limiti (destro escluso) del periodo specificato
 </summary>
	<param name="periodo"></param>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetSupportedPeriods">
	<summary>
 Restituisce l'array dei periodi supportati dalla funzione PeriodoToDates
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.CheckBetween(System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Restituisce un valore booleano che indica se la data è compresa nell'intervallo (estremi inclusi). Se uno o entrambi gli estremi sono Empty il confronto non viene effettuato
 </summary>
	<param name="value"></param>
	<param name="dataInizio"></param>
	<param name="dataFine"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.Now">
	<summary>
 Restituisce la data e l'ora corrente
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.ToDay">
	<summary>
 Restituisce la mezzanotte di oggi
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.ToMorrow">
	<summary>
 Restituisce la mezzanotte di domani
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.YesterDay">
	<summary>
 Restituisce la mezzanotte di ieri
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.PlanActivity(System.String,System.DateTime,System.DateTime)">
	<summary>
 Pianifica l'attività per l'utente corrente
 </summary>
	<param name="description"></param>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.PlanActivityForUser(FinSeA.Sistema.CUser,System.String,System.DateTime,System.DateTime)">
	<summary>
 Pianifica l'attività per un utente specifico
 </summary>
	<param name="user"></param>
	<param name="description"></param>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.CheckIfBusy(FinSeA.Sistema.CUser,System.DateTime,System.DateTime)">
	<summary>
 Restituisce vero se gli impegni dell'utente (attività pianificate) intersecano l'intervallo di tempo specificato
 </summary>
	<param name="user"></param>
	<param name="fromTime"></param>
	<param name="toTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.CheckIfBusy(System.Int32,System.DateTime,System.DateTime)">
	<summary>
 Restituisce vero se gli impegni dell'utente (attività pianificate) intersecano l'intervallo di tempo specificato
 </summary>
	<param name="userID"></param>
	<param name="fromTime"></param>
	<param name="toTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetAvailableOperators">
	<summary>
 Restituisce un array contenente gli operatori predefiniti
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetAvailableGroups">
	<summary>
 Restituisce un array contenente i gruppi disponibili
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetAvailableEventTypes">
	<summary>
 Restituisce un array contenente i nomi dei tipi di classe che definiscono gli eventi che l'utente specificato può creare
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetShortWeekDayName(System.Int32)">
	<summary>
 Restituisce il nome abbreviato del giorno della settimana specificato (da 0 a 6)
 </summary>
	<param name="dayOfWeek"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetShortWeekDayName(System.DateTime)">
	<summary>
 Restituisce il nome del giorno della settimana corrispondente alla data specificata
 </summary>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetWeekDayName(System.Int32)">
	<summary>
 Restituisce il nome esteso del giorno della settimana specificato (da 0 a 6)
 </summary>
	<param name="dayOfWeek"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetWeekDayName(System.DateTime)">
	<summary>
 Restituisce il nome del giorno corrispondente alla data specificata
 </summary>
	<param name="data"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetWeekDayNumber(System.DateTime)">
	<summary>
 Restituisce il numero del giorno della settimana (1 è il primo giorno es: lun o dom)
 </summary>
	<param name="d"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetDatePart(System.Nullable{System.DateTime})">
	<summary>
 Restituisce la data che rappresenta le 0:00 del giorno value
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetMonthName(System.Int32)">
	<summary>
 Restituisce il nome esteso del mese a partire dal numero (1 - 12)
 </summary>
	<param name="monthNumber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetShortMonthName(System.Int32)">
	<summary>
 Restituisce il nome corto del mese a partire dal numero (1 - 12)
 </summary>
	<param name="monthNumber"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetWeekFirstDay(System.DateTime)">
	<summary>
 Restituisce il primo giorno della settimana a cui appartiene la data specificata
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetMonthFirstDay(System.DateTime)">
	<summary>
 Restituisce il primo giorno del mese a cui appartiene la data specificata
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetYearFirstDay(System.DateTime)">
	<summary>
 Restituisce il primo giorno dell'anno a cui appartiene la data specificata
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetYearLastDay(System.DateTime)">
	<summary>
 Restituisce l'ultimo giorno dell'anno a cui appartiene la data specificata
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetNextMonthFirstDay(System.DateTime)">
	<summary>
 Restituisce il primo giorno del mese successivo alla data specificata
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CCalendarClass.Providers">
	<summary>
 Restituisce una collezione di oggetti che implementano l'interfaccia ICalendarProvider
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetActivityByID(System.Int32)">
	<summary>
 Restituisce una attività in base al suo ID
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetScadenze(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Restituisce una collezione ordinata di oggetti CCalendarActivity che rappresentano le scadenze nell'intervallo specificato
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetActivePersons(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
	<summary>
 Restituisce una collezione di oggetti CActivePerson
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<param name="ufficio"></param>
	<param name="operatore"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CCalendarClass.GetLastSecond(System.DateTime)">
	<summary>
 Restituisce la data corrispondente ad un secondo alla mezzanotte del giorno specificato
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.add(`0)">
	<summary>
 Appends the specified element to the end of this list (optional operation).
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.addAll(FinSeA.ICollection{`0})">
	<summary>
 Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.contains(`0)">
	<summary>
 Returns true if this list contains the specified element.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.containsAll(FinSeA.ICollection{`0})">
	<summary>
 Returns true if this list contains all of the elements of the specified collection.
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.remove(`0)">
	<summary>
 Removes the first occurrence of the specified element from this list, if it is present (optional operation).
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.removeAll(FinSeA.ICollection{`0})">
	<summary>
 Removes from this list all of its elements that are contained in the specified collection (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.ICollection`1.retainAll(FinSeA.ICollection{`0})">
	<summary>
 Retains only the elements in this list that are contained in the specified collection (optional operation).
 </summary>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector.capacityIncrement">
	<summary>
  The amount by which the capacity of the vector is automatically incremented when its size becomes greater than its capacity.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector.elementCount">
	<summary>
 The number of valid components in this Vector object.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Vector.elementData">
	<summary>
   The array buffer into which the components of the vector are stored.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.#ctor">
	<summary>
 Constructs an empty vector so that its internal data array has size 10 and its standard capacity increment is zero.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.#ctor(System.Collections.IEnumerable)">
	<summary>
  Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.
 </summary>
	<param name="c"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.#ctor(System.Int32)">
	<summary>
 Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.
 </summary>
	<param name="initialCapacity"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.#ctor(System.Int32,System.Int32)">
	<summary>
 Constructs an empty vector with the specified initial capacity and capacity increment.
 </summary>
	<param name="initialCapacity"></param>
	<param name="capacityIncrement"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.trimToSize">
	<summary>
 Trims the capacity of this vector to be the vector's current size.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.ToString">
	<summary>
 Returns a string representation of this Vector, containing the String representation of each element.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.setElementAt(System.Object,System.Int32)">
	<summary>
 Sets the component at the specified index of this vector to be the specified object.
 </summary>
	<param name="obj"></param>
	<param name="index"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Vector.removeAllElements">
	<summary>
 Removes all components from this vector and sets its size to zero.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Vector">
	<summary>
  The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a Vector can grow or shrink as needed to accommodate adding and removing items after the Vector has been created.
  Each vector tries to optimize storage management by maintaining a capacity and a capacityIncrement. The capacity is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of capacityIncrement. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.
  The Iterators returned by Vector's iterator and listIterator methods are fail-fast: if the Vector is structurally modified at any time after the Iterator is created, in any way except through the Iterator's own remove or add methods, the Iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the Iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Vector's elements method are not fail-fast.
  Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw ConcurrentModificationException on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: the fail-fast behavior of iterators should be used only to detect bugs.
  As of the Java 2 platform v1.2, this class was retrofitted to implement the List interface, making it a member of the Java Collections Framework. Unlike the new collection implementations, Vector is synchronized. 
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.Attributes.GetAttributeCursor(System.Object)">
	<summary>
 Restituisce il cursore degli attributi per l'oggetto
 </summary>
	<param name="obj"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CFormatsClass.FormatDurata(System.Nullable{System.Int64})">
	<summary>
 Formatta un intervallo temporale misurato in secondi in una stringa che mostra gg hh mm ss
 </summary>
	<param name="seconds"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.FileWriter.#ctor(FinSeA.Io.File)">
	<summary>
 Constructs a FileWriter object given a File object.
 </summary>
	<param name="file"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.FileWriter.#ctor(FinSeA.Io.File,System.Boolean)">
	<summary>
 Constructs a FileWriter object given a File object.
 </summary>
	<param name="file"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.FileWriter.#ctor(System.String)">
	<summary>
 Constructs a FileWriter object given a File object.
 </summary>
	<param name="fileName"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.FileWriter.#ctor(System.String,System.Boolean)">
	<summary>
 Constructs a FileWriter object given a File object.
 </summary>
	<param name="fileName"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.FileWriter">
	<summary>
 Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream.
 Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one FileWriter (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.
 FileWriter is meant for writing streams of characters. For writing streams of raw bytes, consider using a FileOutputStream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeBoolean(System.Boolean)">
	<summary>
 Writes a boolean to the underlying output stream as a 1-byte value.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeBytes(System.String)">
	<summary>
 Writes out the string to the underlying output stream as a sequence of bytes.
 </summary>
	<param name="s"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeChar(System.Int32)">
	<summary>
 Writes a char to the underlying output stream as a 2-byte value, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeChars(System.String)">
	<summary>
 Writes a string to the underlying output stream as a sequence of characters.
 </summary>
	<param name="s"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeDouble(System.Double)">
	<summary>
 Converts the double argument to a long using the doubleToLongBits method in class Double, and then writes that long value to the underlying output stream as an 8-byte quantity, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeFloat(System.Single)">
	<summary>
 Converts the float argument to an int using the floatToIntBits method in class Float, and then writes that int value to the underlying output stream as a 4-byte quantity, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeInt(System.Int32)">
	<summary>
 Writes an int to the underlying output stream as four bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeLong(System.Int64)">
	<summary>
 Writes a long to the underlying output stream as eight bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeShort(System.Int32)">
	<summary>
 Writes a short to the underlying output stream as two bytes, high byte first.
 </summary>
	<param name="v"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.DataOutputStream.writeUTF(System.String)">
	<summary>
 Writes a string to the underlying output stream using modified UTF-8 encoding in a machine-independent manner.
 </summary>
	<param name="str"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.NDouble">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Double) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.ByteArrayOutputStream">
	<summary>
 A ByteArrayInputStream contains an internal buffer that contains bytes that may be read from the stream. An internal counter keeps track of the next byte to be supplied by the read method.
 Closing a ByteArrayInputStream has no effect. The methods in this class can be called after the stream has been closed without generating an IOException.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CAppuntamentiClass.GetAppuntamentiPerPersona(FinSeA.Anagrafica.CPersona)">
	<summary>
 Restituisce la collezione di tutti gli appuntamenti fissati per la persona
 </summary>
	<param name="persona"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.TipoRapporto">
	<summary>
 Restituisce o imposta il tipo rapporto predefinito per l'azienda
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.ValutazioneGARF">
	<summary>
 Restituisce o imposta la valutazione GARF dell'azienda
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.IDReferente">
	<summary>
 Restituisce o imposta l'ID dell'impiegato a cui fare riferimento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.Referente">
	<summary>
 Restituisce  o imposta l'impiegato a cui fare riferimento.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.Impiegati">
	<summary>
 Restituisce una collezione di tutte le relazioni lavorative tra l'azienda e le persone fisiche assunte 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CAzienda.FormaGiuridica">
	<summary>
 Restituisce o imposta il tipo di azienda
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CCanaliClass">
	<summary>
 Gestione dei canali
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersonaFisica.IDImpiegoPrincipale">
	<summary>
 Restituisce o imposta l'ID dell'impiego principale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersonaFisica.Nome">
	<summary>
 Restituisce o imposta il nome della persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersonaFisica.Cognome">
	<summary>
 Restituisce o imposta il cognome della persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.clear">
	<summary>
 Removes all of the mappings from this map (optional operation).
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.containsKey(System.Object)">
	<summary>
 Returns true if this map contains a mapping for the specified key.
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.containsValue(System.Object)">
	<summary>
 Returns true if this map maps one or more keys to the specified value.
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.entrySet">
	<summary>
 Returns a Set view of the mappings contained in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.equals(System.Object)">
	<summary>
 Compares the specified object with this map for equality.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.get(System.Object)">
	<summary>
 Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.
 </summary>
	<param name="v"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.hashCode">
	<summary>
 Returns the hash code value for this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.isEmpty">
	<summary>
 Returns true if this map contains no key-value mappings.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.keySet">
	<summary>
 Returns a Set view of the keys contained in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.put(System.Object,System.Object)">
	<summary>
 Associates the specified value with the specified key in this map (optional operation).
 </summary>
	<param name="p1"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.putAll(FinSeA.Map)">
	<summary>
 Copies all of the mappings from the specified map to this map (optional operation).
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.remove(System.Object)">
	<summary>
 Removes the mapping for a key from this map if it is present (optional operation).
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Map.size">
	<summary>
 Returns the number of key-value mappings in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Map.Values">
	<summary>
 Returns a Collection view of the values contained in this map.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.Luogo.Nome">
	<summary>
 Restituisce o imposta il nome del luogo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.Luogo">
	<summary>
 Rappresenta un luogo geografico, un indirizzo, un comune o una nazione
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneRegistrata.SourceName">
	<summary>
 Restituisce o imposta il tipo su cui è definita l'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.AzioneRegistrata.ActionType">
	<summary>
 Restituisce o imposta il nome del tipo che definisce l'azione sugli oggetti SourceName
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.AzioneRegistrata">
	<summary>
 Azione definita per il tipo di oggetto associato alla notifica (campo SourceName)
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CPropertyPagesClass.GetRegisteredPropertyPages(System.String)">
	<summary>
 Restituisce un array contenente i tipi delle classi di tipo PropertyPage registrate per il tipo specificato
 </summary>
	<param name="typeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CPropertyPagesClass.GetRegisteredPropertyPageNames(System.String)">
	<summary>
 Restituisce un array contenente i nomi delle classi di tipo PropertyPage registrate per il tipo specificato
 </summary>
	<param name="typeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CPropertyPagesClass.GetRegisteredPropertyPages(System.Type)">
	<summary>
 Restituisce un array contenente i nomi delle classi di tipo PropertyPage registrate per il tipo specificato
 </summary>
	<param name="type"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.add(`0)">
	<summary>
 Adds the specified element to this set if it is not already present (optional operation).
 </summary>
	<param name="e"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.addAll(FinSeA.ICollection{`0})">
	<summary>
 Adds all of the elements in the specified collection to this set if they're not already present (optional operation).
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.contains(`0)">
	<summary>
 Returns true if this set contains the specified element.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.containsAll(FinSeA.ICollection{`0})">
	<summary>
 Returns true if this set contains all of the elements of the specified collection.
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.iterator">
	<summary>
 Returns an iterator over the elements in this set.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.remove(`0)">
	<summary>
 Removes the specified element from this set if it is present (optional operation).
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.removeAll(FinSeA.ICollection{`0})">
	<summary>
 Removes from this set all of its elements that are contained in the specified collection (optional operation).
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Set`1.retainAll(FinSeA.ICollection{`0})">
	<summary>
 Retains only the elements in this set that are contained in the specified collection (optional operation).
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroup.Authorizations">
	<summary>
 Restituisce la collezione delle azioni consentite o negate esplicitamente al gruppo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroup.Modules">
	<summary>
 Restituisce la collezione dei moduli esplicitamente autorizzati o negati per il gruppo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.ModuleName">
	<summary>
 Restituisce o imposta il nome del modulo su cui è definita l'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.Module">
	<summary>
 Restituisce o imposta il modulo su cui è definita l'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.AuthorizationName">
	<summary>
 Restituisce o imposta il nome dell'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.AuthorizationDescription">
	<summary>
 Restituisce o imposta una stringe che descrive l'azione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.Visible">
	<summary>
 Restituisce o imposta un valore booleano che indica specifica se si tratta di un'azione di interfaccia o nascota
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleAction.ClassHandler">
	<summary>
 Nome della classe che esegue l'azione (non implementato)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CModuleAction.UserCanDoAction(FinSeA.Sistema.CUser)">
	<summary>
 Restituisce vero se l'utente è abilitato all'azione corrente anche considerando i gruppi a cui appartiene l'utente stesso
 </summary>
	<param name="user"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleAction">
	<summary>
 Descrive un'azione definita su una risorsa.
 All'azione possono essere associati uno o più handler ModuleActionHandler raccolti nella proprietà Handlers
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.Authorizations">
	<summary>
 Restituisce la collezione delle azioni consentite o negate esplicitamente all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.Modules">
	<summary>
 Restituisce la collezione dei moduli esplicitamente autorizzati o negati per l'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.ClientCertificate">
	<summary>
 Restituisce o imposta il percorso del certificato che identifica l'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.UserName">
	<summary>
 Restituisce il nome dell'utente corrente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.Nominativo">
	<summary>
 Restituisce o imposta il nome visualizzato per l'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.ExpireDate">
	<summary>
 Restituisce o imposta la data di scadenza della password
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.ExpireLogin">
	<summary>
 Restituisce o imposta la data di scadenza dell'account
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.ExpireDays">
	<summary>
 Restituisce o imposta il numero di giorni di cui prolungare la data di scadenza dell'account
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.eMail">
	<summary>
 Restituisce o imposta l'e-mail principale dell'account
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.ChangePassword(System.String,System.String)">
	<summary>
 Modifica la password dell'utente
 </summary>
	<param name="oldPassword"></param>
	<param name="newPassword"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.ForcePassword(System.String)">
	<summary>
 Forza la password dell'utente
 </summary>
	<param name="newPassword"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUser.Groups">
	<summary>
 Restituisce un array contenente tutti i gruppi a cui appartiene l'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.IsLogged">
	<summary>
 Restituisce vero se esiste un utente loggato nella sessione corrente
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.IsExpired">
	<summary>
 Restituisce vero se l'account è scaduto
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.IsImpersonating">
	<summary>
 Restituisce vero se esiste un utente loggato nella sessione corrente
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUser.LogOut(FinSeA.Sistema.LogOutMethods)">
	<summary>
 Effettua la disconnessione dell'utente corrente
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:FinSeA.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:FinSeA.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:FinSeA.Anagrafica.CLuoghiClass.EspandiNomeProvincia(System.String)">
	<summary>
 Espande il nome della provincia a partire dalla sua sigla. Se il valore è già un nome viene restituito il valore stesso
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:FinSeA.Anagrafica.PFlags.CF_VERIFICATO">
	<summary>
 Flag impostato se il codice fiscale è stato verificato
 </summary>
	<remarks></remarks>
</member><member name="E:FinSeA.Anagrafica.CPersona.Merged">
	<summary>
 Evento generato quando questo oggetto viene unito con un altra anagrafica
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:FinSeA.Anagrafica.CPersona.Transferred">
	<summary>
 Evento generato quando questo oggetto viene trasferito ad un altro punto operativo
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersona.TransferTo(FinSeA.Anagrafica.CUfficio,System.String)">
	<summary>
 Trasferisce la persona ad un altro punto operativo e genera l'evento Transferred
 </summary>
	<param name="ufficio"></param>
	<param name="messaggio"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Flags">
	<summary>
 Restituisce o imposta una combinazione di falgs che definiscono alcune proprietà della persona
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Contatti">
	<summary>
 Restituisce la collezione dei contatti telefonici ed e-mail
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CPersona.AddPhoneNumber(System.String,System.String,System.Nullable{System.Boolean})">
	<summary>
 Cerca tra i campi contatto quello relativo al nome e se è libero assegna il valore. Se il campo è già occupato cerca di creare un nuovo contatto
 </summary>
	<param name="nome"></param>
	<param name="valore"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.IconURL">
	<summary>
 Restituisce o imposta il percorso dell'immagine associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.IDFonte">
	<summary>
 Restituisce o imposta l'ID della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.TipoFonte">
	<summary>
 Restituisce o imposta il tipo fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Fonte">
	<summary>
 Restituisce o imposta la fonte dell'anagrafica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.NomeFonte">
	<summary>
 Restituisce o imposta il nome della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Canale">
	<summary>
 Restituisce o imposta il canale attraverso cui è pervenuto questo contatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.IDCanale">
	<summary>
 Restituisce o imposta l'ID del canale 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.NomeCanale">
	<summary>
 Restituisce o imposta il nome del canale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.TipoPersona">
	<summary>
 Restituisce o imposta il tipo della persona (0 per persona fisica)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Professione">
	<summary>
 Restituisce o imposta la professione
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Titolo">
	<summary>
 Restituisce o imposta il titolo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Cittadinanza">
	<summary>
 Restituisce o imposta la cittadinanza
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Sesso">
	<summary>
 Restituisce o imposta il sesso della persona (M = Maschio, F = Femmina)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.DataNascita">
	<summary>
 Restituisce o imposta la data di nascita
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.DataMorte">
	<summary>
 Restituisce o imposta la data di morte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.Deceduto">
	<summary>
 Restituisce o imposta un valore booleano che indica che la persona è deceduta o l'azienda è stata chiusa
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.CodiceFiscale">
	<summary>
 Restituisce o imposta il codice fiscale del contatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.CodiceFiscaleVerificato">
	<summary>
 Restituisce o imposta un valore booleano che indica se il codice fiscale è stato verificato (con i documenti)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.PartitaIVA">
	<summary>
 Restituisce o imposta la partita iva del contatto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.NatoA">
	<summary>
 Restituisce o imposta un oggetto CIndirizzo che rappresenta il luogo di nascita
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.MortoA">
	<summary>
 Restituisce o imposta un oggetto CIndirizzo che rappresenta il luogo di morte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.ResidenteA">
	<summary>
 Restituisce o imposta un oggetto CIndirizzo che rappresenta il luogo di residenza
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CPersona.DomiciliatoA">
	<summary>
 Restituisce o imposta un oggetto CIndirizzo che rappresenta il luogo di domicilio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.DataInizio">
	<summary>
 Restituisce la data di inizio della relazione (valida in particolare per le affinità)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.DataFine">
	<summary>
 Restituisce la data di fine della relazione (valida in particolare per le affinità)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.NomeRelazione">
	<summary>
 Restituisce o imposta il nome della relazione (es. Coniuge, Figlio, Genitore, ecc..)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.Persona1">
	<summary>
 Restituisce o imposta la persona (soggetto della relazione)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.IDPersona1">
	<summary>
 Restituisce o imposta l'ID della Persona1
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.NomePersona1">
	<summary>
 Restituisce o imposta il nome della Persona1
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.Persona2">
	<summary>
 Restituisce o imposta la persona (oggetto della relazione)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.IDPersona2">
	<summary>
 Restituisce o imposta l'ID della Persona2
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CRelazioneParentale.NomePersona2">
	<summary>
 Restituisce o imposta il nome della Persona1
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CRelazioneParentale">
	<summary>
 Rappresenta una relazione di parentela/affinità tra due persone fisiche
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.InstantiateNewItem">
	<summary>
 Crea un nuovo oggetto 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.GetShortDescription">
	<summary>
 Restituisce un testo breve che descrive il tipo di provider
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.GetSupportedTypes">
	<summary>
 Restituisce un array di tipi di oggetto supportati da questo provider
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.GetActivePersons(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
	<summary>
 Restituisce le persone con eventi gestiti da questo provider nell'intervallo di date specificato
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<param name="ufficio"></param>
	<param name="operatore"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.GetScadenze(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Restituisce le scadenza gestite da questo provider
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.ICalendarProvider.GetPendingActivities">
	<summary>
 Restituisce le aziende pendenti
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.ICalendarProvider">
	<summary>
 Classe base del provider di attività del calendario
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FaxService.FaxDriverOptions.NomeMittente">
	<summary>
 Restituisce o imposta il nome del mittente visualizzato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FaxService.FaxDriverOptions.NumeroMittente">
	<summary>
 Restituisce o imposta il numero del mittente 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FaxService.FaxDriverOptions.Subject">
	<summary>
 Restituisce o imposta l'oggetto del documento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFolderCursor.Pattern">
	<summary>
 Restituisce il filtro di ricerca
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFolderCursor.AttributesMask">
	<summary>
 Restituisce la maschera di ricerca
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFolderCursor.IncludeSubDirs">
	<summary>
 Restituisce un valore booleano che indica se la ricerca include le sottocartelle
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FindFolderCursor.Count">
	<summary>
 Restituisce il numero di files e/o cartelle corrispondenti al filtro
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.FindFolderCursor">
	<summary>
 Cursore sulle sottocartelle
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.BufferedWriter.#ctor(FinSeA.Io.Writer)">
	<summary>
 Creates a buffered character-output stream that uses a default-sized output buffer.
 </summary>
	<param name="out"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.BufferedWriter.#ctor(FinSeA.Io.Writer,System.Int32)">
	<summary>
 Creates a new buffered character-output stream that uses an output buffer of the given size.
 </summary>
	<param name="out"></param>
	<param name="sz"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.BufferedWriter.newLine">
	<summary>
 Writes a line separator. The line separator string is defined by the system property line.separator, and is not necessarily a single newline ('\n') character.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.BufferedWriter">
	<summary>
 Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.
 The buffer size may be specified, or the default size may be accepted. The default is large enough for most purposes.
 A newLine() method is provided, which uses the platform's own notion of line separator as defined by the system property line.separator. Not all platforms use the newline character ('\n') to terminate lines. Calling this method to terminate each output line is therefore preferred to writing a newline character directly.
 In general, a Writer sends its output immediately to the underlying character or byte stream. Unless prompt output is required, it is advisable to wrap a BufferedWriter around any Writer whose write() operations may be costly, such as FileWriters and OutputStreamWriters. For example,
  PrintWriter out   = new PrintWriter(new BufferedWriter(new FileWriter("foo.out")));
 will buffer the PrintWriter's output to the file. Without buffering, each invocation of a print() method would cause characters to be converted into bytes that would then be written immediately to the file, which can be very inefficient.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.BufferedReader.readLine">
	<summary>
 Reads a line of text.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.RegisterAzione(System.String,FinSeA.Sistema.AzioneEseguibile)">
	<summary>
 Registra un'azione definita sul tipo di oggetti specificato
 </summary>
	<param name="sourceName">[in] Tipo di sorgente. Se NULL l'azione sarà disponibile su tutto</param>
	<param name="azione">[in] Azione da registrare per il tipo di sorgente specificato</param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.UnregisterAzione(System.String,FinSeA.Sistema.AzioneEseguibile)">
	<summary>
 Rimuove la registrazione dell'azione
 </summary>
	<param name="sourceName">[in] Tipo di sorgente. Se NULL l'azione sarà rimossa solo se definita su tutto</param>
	<param name="azione">[in] Azione da rimuovere</param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetRegisteredActions(System.String)">
	<summary>
 Restituisce una collezione contenente tutte le azioni registrate per la notifica
 </summary>
	<param name="sourceName">[in] Tipo di sorgente. Non può essere NULL</param>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CDBConnection.Path">
	<summary>
 Restituisce o imposta la stringa che identifica la risorsa database
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CDBConnection.Tables">
	<summary>
 Restituisce la collezione delle tabelle contenute nel database
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.CDBConnection.Queries">
	<summary>
 Restituisce la collezione delle queries contenute nel database
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.IsOpen">
	<summary>
 Restituisce vero se la connessione è aperta
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.OpenDB">
	<summary>
 Apre la connessione
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.CloseDB">
	<summary>
 Chiude la connessione
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.GetConnection">
	<summary>
 Restituisce l'oggetto IDBConnection sottostante
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.ExecuteReader(System.String)">
	<summary>
 Restituisce un data reader
 </summary>
	<param name="sql"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.ExecuteScalar(System.String)">
	<summary>
 Restituisce il valore di una query scalare
 </summary>
	<param name="dbSQL"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.ExecuteCommand(System.String)">
	<summary>
 Esegue il comando
 </summary>
	<param name="sql"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.Load(System.Object,FinSeA.Databases.DBReader)">
	<summary>
 Carica l'oggetto dal recordset
 </summary>
	<param name="obj"></param>
	<param name="dbRis"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.CDBConnection.DropTable(System.String)">
	<summary>
 Elimina una tabella dal database
 </summary>
	<param name="tableName"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Databases.CDBConnection">
	<summary>
 Connessione generica ad un database
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupAuthorization.ActionID">
	<summary>
 Restituisce o imposta l'ID dell'azione associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupAuthorization.Action">
	<summary>
 Restituisce o imposta l'azione associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupAuthorization.GroupID">
	<summary>
 Restituisce o imposta l'ID del gruppo associato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupAuthorization.Allow">
	<summary>
 Restituisce o imposta un valore booleano che consente esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CGroupAuthorization.Negate">
	<summary>
 Restituisce o imposta un valore booleano che nega esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CGroupAuthorization">
	<summary>
 Rappresenta una autorizzazione o una negazione esplicita di un'azione ad uno specifico gruppo di utenti
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXUser.ModuleID">
	<summary>
 Restituisce o imposta l'ID del modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXUser.Module">
	<summary>
 Restituisce o imposta il modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXUser.UserID">
	<summary>
 Restituisce o imposta l'ID dell'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXUser.Allow">
	<summary>
 Restituisce o imposta un valore booleano che consente esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXUser.Negate">
	<summary>
 Restituisce o imposta un valore booleano che nega esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXUser">
	<summary>
 Rappresenta l'assegnazioni di un modulo ad un utente
 </summary>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.CUsersClass.LoginError">
	<summary>
 Evento generato quando viene tentato un accesso non autorizzato
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUsersClass.ClearUnusedSessions">
	<summary>
 Libera lo spazio occupato dalle variabili temporanee che vengono create all'interno del database durante una qualsiasi sessione utente. Questo metodo libera le risorse occupate da quelle sessioni non più attive da almeno 30 minuti
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CUsersClass.CurrentUser">
	<summary>
 Restituisce un oggetto CCurrentUser che rappresenta l'utente corrente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUsersClass.GetLoginHistoryById(System.Int32)">
	<summary>
 Restituisce un oggetto CLoginHistory in base al suo ID
 </summary>
	<param name="ID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CUsersClass.Reset">
	<summary>
 Ricarica le variabili di sistema
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.XML.XMLWriter.WriteRowString(System.String)">
	<summary>
 Aggiunge una stringa di testo senza formattazione
 </summary>
	<param name="text"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.XML.XMLWriter.WriteRowData(System.String)">
	<summary>
 Aggiunge una stringa di testo senza formattazione
 </summary>
	<param name="text"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.XML.XMLWriter.CheckInTag">
	<summary>
 Controlla lo stato del writer. Se siamo all'interno di un tag (è stata aperta una parentesi angolata, ma non è ancora stata chiusa), chiude il tag
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CImpiegati">
	<summary>
 Collezione di impiegati di un'azienda
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.ConcurrentHashMap`2.putIfAbsent(`0,`1)">
	<summary>
 If the specified key is not already associated with a value, associate it with the given value.
 </summary>
	<param name="key"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List`1.subList(System.Int32,System.Int32)">
	<summary>
 Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
 </summary>
	<param name="fromIndex"></param>
	<param name="toIndex"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.TimeZone">
	<summary>
 public abstract class TimeZone
 extends Object
 Implements Serializable, Cloneable
 TimeZone represents a time zone offset, and also figures out daylight savings.
 Typically, you get a TimeZone using getDefault which creates a TimeZone based on the time zone where the program is running. For example, for a program running in Japan, getDefault creates a TimeZone object based on Japanese Standard Time.
 You can also get a TimeZone using getTimeZone along with a time zone ID. For instance, the time zone ID for the U.S. Pacific Time zone is "America/Los_Angeles". So, you can get a U.S. Pacific Time TimeZone object with:
      TimeZone tz = TimeZone.getTimeZone("America/Los_Angeles");
 You can use the getAvailableIDs method to iterate through all the supported time zone IDs. You can then choose a supported ID to get a TimeZone. If the time zone you want is not represented by one of the supported IDs, then a custom time zone ID can be specified to produce a TimeZone. The syntax of a custom time zone ID is:
      CustomID:
             GMT Sign Hours : Minutes
              GMT Sign Hours Minutes
              GMT Sign Hours
      Sign: one of
              + -
      Hours:
              Digit
              Digit Digit
      Minutes:
              Digit Digit
      Digit: one of
              0 1 2 3 4 5 6 7 8 9
 Hours must be between 0 to 23 and Minutes must be between 00 to 59. For example, "GMT+10" and "GMT+0010" mean ten hours and ten minutes ahead of GMT, respectively.
 The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard. No daylight saving time transition schedule can be specified with a custom time zone ID. If the specified string doesn't match the syntax, "GMT" is used.
 When creating a TimeZone, the specified custom time zone ID is normalized in the following syntax:
      NormalizedCustomID:
              GMT Sign TwoDigitHours : Minutes
      Sign: one of
              + -
      TwoDigitHours:
              Digit Digit
      Minutes:
              Digit Digit
      Digit: one of
              0 1 2 3 4 5 6 7 8 9
 For example, TimeZone.getTimeZone("GMT-8").getID() returns "GMT-08:00". 
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.NotificaCursor">
	<summary>
 Cursore sulla tabella delle notifiche 
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.NBoolean">
	<summary>
 Rappresenta un numero intero che può assumere un valore NULL.
 A differenza di Nullable(of Boolean) per questo oggetto sono definite le operazioni aritmetiche standard
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Encoding.Ascii85.PrefixMark">
	<summary>
 Prefix mark that identifies an encoded ASCII85 string, traditionally &lt;~
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Encoding.Ascii85.SuffixMark">
	<summary>
 Suffix mark that identifies an encoded ASCII85 string, traditionally ~&gt;
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Encoding.Ascii85.LineLength">
	<summary>
 Maximum line length for encoded ASCII85 string;
 set to zero for one unbroken line.
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Encoding.Ascii85.EnforceMarks">
	<summary>
 Add the Prefix and Suffix marks when encoding, and enforce their presence for decoding
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Encoding.Ascii85.Decode1(System.String)">
	<summary>
 Decodes an ASCII85 encoded string into the original binary data
 </summary>
	<param name="s">ASCII85 encoded string</param>
	<returns>byte array of decoded binary data</returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Encoding.Ascii85.Encode1(System.Byte[])">
	<summary>
Encodes binary data into a plaintext ASCII85 format string
 </summary>
	<param name="ba">binary data to encode</param>
	<returns>ASCII85 encoded string</returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.Initialize">
	<summary>
 Inizializza la libreria
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CBBAN.IsValid">
	<summary>
 Restituisce vero se il codice rappresentato è valido
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CBBAN">
	<summary>
 Classe che rappresenta un codice BBAN
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CCanaleCursor">
	<summary>
 Cursore sulla tabella dei canali
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.IFonte.Nome">
	<summary>
 Nome della fonte
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.IFonte.IconURL">
	<summary>
 Percorso dell'icona associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.IFonte">
	<summary>
 Interfaccia implementata dagli oggetti utilizzabili come fonti di un contatto, di una anagrafica, di una pratica ecc
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.Attivo">
	<summary>
 Restituisce o imposta un valore booleano che indica se l'ufficio è attivo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.DataApertura">
	<summary>
 Restituisce o imposta la data di apertura dell'ufficio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.DataChiusura">
	<summary>
 Restituisce o imposta la data di chiusura dell'ufficio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.Nome">
	<summary>
 Restituisce o imposta il nome del punto operativo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.IDAzienda">
	<summary>
 Restituisce o imposta l'ID dell'azienda a cui appartiene il punto operativo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.NomeAzienda">
	<summary>
 Restituisce o imposta il nome dell'azienda a cui appartiene l'ufficio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.Azienda">
	<summary>
 Restituisce o imposta l'oggetto azienda a cui appartiene il punto operativo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.Utenti">
	<summary>
 Restituisce una collezione di CUser contenete gli utenti appartenenti all'ufficio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.MinimoRicontatti">
	<summary>
 Restituisce o imposta il valore minimo dei ricontatti che un ufficio deve generare in un giorno feriale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.CUfficio.Indirizzo">
	<summary>
 Restituisce l'indirizzo dell'ufficio
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CUfficio">
	<summary>
 Classe che rappresenta un ufficio di una azienda
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Hashtable.contains(System.Object)">
	<summary>
 Tests if some key maps into the specified value in this hashtable.
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Databases.DBCursorEventArgs">
	<summary>
 Descrizione un evento generato da un cursore
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Io.Reader.lock">
	<summary>
 The object used to synchronize operations on this stream. For efficiency, a character-stream object may use an object other than itself to protect critical sections. A subclass should therefore use the object in this field rather than this or a synchronized method.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.#ctor">
	<summary>
 Creates a new character-stream reader whose critical sections will synchronize on the reader itself.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.#ctor(System.Object)">
	<summary>
 Creates a new character-stream reader whose critical sections will synchronize on the given object.
 </summary>
	<param name="lock"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.close">
	<summary>
 Closes the stream and releases any system resources associated with it.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.mark(System.Int32)">
	<summary>
 Marks the present position in the stream.
 </summary>
	<param name="readAheadLimit"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.markSupported">
	<summary>
 Tells whether this stream supports the mark() operation.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.read">
	<summary>
 Reads a single character.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.read(System.Char[])">
	<summary>
 Reads characters into an array.
 </summary>
	<param name="cbuf"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.read(System.Char[],System.Int32,System.Int32)">
	<summary>
 Reads characters into a portion of an array.
 </summary>
	<param name="cbuf"></param>
	<param name="off"></param>
	<param name="len"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.ready">
	<summary>
 Tells whether this stream is ready to be read.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.reset">
	<summary>
 Resets the stream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Reader.skip(System.Int64)">
	<summary>
 Skips characters.
 </summary>
	<param name="n"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.Reader">
	<summary>
 Abstract class for reading character streams. 
 The only methods that a subclass must implement are read(char[], int, int) and close(). 
 Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, 
 additional functionality, or both.
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Io.Writer.lock">
	<summary>
 The object used to synchronize operations on this stream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.#ctor">
	<summary>
 Creates a new character-stream writer whose critical sections will synchronize on the writer itself.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.#ctor(System.Object)">
	<summary>
 Creates a new character-stream writer whose critical sections will synchronize on the given object.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.append(System.Char)">
	<summary>
 Appends the specified character to this writer.
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.append(FinSeA.CharSequence)">
	<summary>
 Appends the specified character sequence to this writer.
 </summary>
	<param name="csq"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.append(FinSeA.CharSequence,System.Int32,System.Int32)">
	<summary>
 Appends a subsequence of the specified character sequence to this writer.
 </summary>
	<param name="csq"></param>
	<param name="start"></param>
	<param name="end"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.close">
	<summary>
 Closes the stream, flushing it first.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.flush">
	<summary>
 Flushes the stream.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.write(System.Char[])">
	<summary>
 Writes an array of characters.
 </summary>
	<param name="cbuf"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.write(System.Char[],System.Int32,System.Int32)">
	<summary>
 Writes a portion of an array of characters.
 </summary>
	<param name="cbuf"></param>
	<param name="off"></param>
	<param name="len"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.write(System.Int32)">
	<summary>
 Writes a single character.
 </summary>
	<param name="c"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.write(System.String)">
	<summary>
 Writes a string.
 </summary>
	<param name="str"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.Writer.write(System.String,System.Int32,System.Int32)">
	<summary>
 Writes a portion of a string.
 </summary>
	<param name="str"></param>
	<param name="off"></param>
	<param name="len"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.Writer">
	<summary>
 Abstract class for writing to character streams. The only methods that a subclass must implement are write(char[], int, int), flush(), and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CGroupAuthorizationCollection">
	<summary>
 Collezione delle autorizzazioni di gruppo
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CKnownUsersClass.GlobalAdmin">
	<summary>
 Restituisce l'utente amministrativo globale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CKnownUsersClass.SystemUser">
	<summary>
 Restituisce di sistema predefinito
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CKnownUsersClass.GuestUser">
	<summary>
 Restituisce l'utente predefinito per le sessioni non autenticate
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CContatti.Add(System.String,System.String)">
	<summary>
 Crea un nuovo oggetto con nome, lo salva, e lo restituisce
 </summary>
	<param name="tipo"></param>
	<param name="nome"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CContatti.GetItemByTypeAndKey(System.String,System.String)">
	<summary>
 Restituisce l'elemento corrispondente alla chiave o nothing se non esiste alcuna corrispondenza
 </summary>
	<param name="tipo"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CContatti.IndexOfKey(System.String)">
	<summary>
 Restituisce l'indice dell'elemento che corrisponde al nome specificato. La chiave non è case sensitive. Se non esiste alcun elemento con questa chiave viene restituoto -1
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.CContatti.IndexOfTipoAndKey(System.String,System.String)">
	<summary>
 Restituisce l'indice dell'elemento che corrisponde al nome specificato. La chiave non è case sensitive. Se non esiste alcun elemento con questa chiave viene restituoto -1
 </summary>
	<param name="tipo"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CFontiCursor">
	<summary>
 Cursore sulla tabella delle fonti
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.LinkedHashMap.removeEldestEntry(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
	<summary>
 Returns true if this map should remove its eldest entry.
 </summary>
	<param name="eldest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.add(System.Int32,System.Object)">
	<summary>
 Inserts the specified element at the specified position in this list (optional operation).
 </summary>
	<param name="index"></param>
	<param name="o"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.List.addAll(System.Int32,FinSeA.ICollection)">
	<summary>
 Inserts all of the elements in the specified collection into this list at the specified position (optional operation).
 </summary>
	<param name="fromIndex"></param>
	<param name="col"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.get(System.Int32)">
	<summary>
 Returns the element at the specified position in this list.
 </summary>
	<param name="i"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.indexOf(System.Object)">
	<summary>
 Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.lastIndexOf(System.Object)">
	<summary>
 Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element.
 </summary>
	<param name="o"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.remove(System.Int32)">
	<summary>
 Removes the element at the specified position in this list (optional operation).
 </summary>
	<param name="index"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.set(System.Int32,System.Object)">
	<summary>
 Replaces the element at the specified position in this list with the specified element (optional operation).
 </summary>
	<param name="index"></param>
	<param name="element"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.List.subList(System.Int32,System.Int32)">
	<summary>
 Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
 </summary>
	<param name="fromIndex"></param>
	<param name="toIndex"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.List">
	<summary>
 public interface List 
 extends Collection 
 An ordered collection (also known as a sequence). The user of this interface has precise control over where in the list each element is inserted. The user can access elements by their integer index (position in the list), and search for elements in the list.
 Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements e1 and e2 such that e1.equals(e2), and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare.
 The List interface places additional stipulations, beyond those specified in the Collection interface, on the contracts of the iterator, add, remove, equals, and hashCode methods. Declarations for other inherited methods are also included here for convenience.
 The List interface provides four methods for positional (indexed) access to list elements. Lists (like Java arrays) are zero based. Note that these operations may execute in time proportional to the index value for some implementations (the LinkedList class, for example). Thus, iterating over the elements in a list is typically preferable to indexing through it if the caller does not know the implementation.
 The List interface provides a special iterator, called a ListIterator, that allows element insertion and replacement, and bidirectional access in addition to the normal operations that the Iterator interface provides. A method is provided to obtain a list iterator that starts at a specified position in the list.
 The List interface provides two methods to search for a specified object. From a performance standpoint, these methods should be used with caution. In many implementations they will perform costly linear searches.
 The List interface provides two methods to efficiently insert and remove multiple elements at an arbitrary point in the list.
 Note: While it is permissible for lists to contain themselves as elements, extreme caution is advised: the equals and hashCode methods are no longer well defined on such a list.
 Some list implementations have restrictions on the elements that they may contain. For example, some implementations prohibit null elements, and some have restrictions on the types of their elements. Attempting to add an ineligible element throws an unchecked exception, typically NullPointerException or ClassCastException. Attempting to query the presence of an ineligible element may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible element whose completion would not result in the insertion of an ineligible element into the list may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as "optional" in the specification for this interface.
 This interface is a member of the Java Collections Framework.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.StatsItemComparerByCounter">
	<summary>
 Compare gli oggetto StatsItem sulla base del numero di esecuzioni (campo Count) per ottenere un ordinamento decrescente
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Databases.DBEventArgs">
	<summary>
 Connessione generica ad un database
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.CreateToken(System.String,System.String)">
	<summary>
 Salva il valore specificato e restituisce un token valido solo all'interno della sessione corrente
 </summary>
	<param name="name"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.GetTokenValue(System.String)">
	<summary>
 Dato il token valido nella sessione corrente restituisce il valore ad esso associato
 </summary>
	<param name="token"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.GetTokenName(System.String)">
	<summary>
 Dato il token valido nella sessione corrente restituisce il nome ad esso associato
 </summary>
	<param name="token"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.FindToken(System.String)">
	<summary>
 Cerca il token nella sessione corrente associato al nome specificato. Se il token non esiste viene restituito NULL
 </summary>
	<param name="name"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.FindTokenOrCreate(System.String,System.String)">
	<summary>
 Cerca il token associato al nome specificato e se non esiste lo crea
 </summary>
	<param name="name"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.ClearAll">
	<summary>
 Rimuove tutti i tokens della sessione corrente
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.ClearOldSessionsTokens">
	<summary>
 Elimina tutti i token creati in sessioni ormai scadute
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CASPSecurityClass.GetRandomKey(System.Int32)">
	<summary>
 Genera una chiave alfanumerica della lunghezza specificata
 </summary>
	<param name="keyLen"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.SMSService.SMSDeliver">
	<summary>
 Evento generato quando un SMS inviato cambia stato
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.SMSService.SMSReceived">
	<summary>
 Evento generato quando viene ricevuto un SMS
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.SMSService.DefaultDriver">
	<summary>
 Restituisce o imposta il driver predefinito utilizzato per l'invio degli SMS
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.Send(System.String,System.String)">
	<summary>
 Invia un SMS utilizzando il driver predefinito
 </summary>
	<param name="targetNumber"></param>
	<param name="message"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.Send(System.String,System.String,FinSeA.Sistema.SMSService.SMSDriverOptions)">
	<summary>
 Invia un SMS utilizzando il driver predefinito
 </summary>
	<param name="targetNumber"></param>
	<param name="message"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.Send(FinSeA.Sistema.SMSService.BasicSMSDriver,System.String,System.String)">
	<summary>
 Invia un SMS utilizzando il driver predefinito
 </summary>
	<param name="targetNumber"></param>
	<param name="message"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.SMSService.Send(FinSeA.Sistema.SMSService.BasicSMSDriver,System.String,System.String,FinSeA.Sistema.SMSService.SMSDriverOptions)">
	<summary>
 Invia un SMS utilizzando il driver predefinito
 </summary>
	<param name="targetNumber"></param>
	<param name="message"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.OutputStreamWriter.#ctor(FinSeA.Io.OutputStream)">
	<summary>
 Creates an OutputStreamWriter that uses the default character encoding.
 </summary>
	<param name="out"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.OutputStreamWriter.#ctor(FinSeA.Io.OutputStream,System.String)">
	<summary>
 Creates an OutputStreamWriter that uses the named charset.
 </summary>
	<param name="out"></param>
	<param name="charsetName"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.OutputStreamWriter.getEncoding">
	<summary>
 Returns the name of the character encoding being used by this stream.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.OutputStreamWriter">
	<summary>
 An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified charset. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.
 Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. The size of this buffer may be specified, but by default it is large enough for most purposes. Note that the characters passed to the write() methods are not buffered.
 For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter invocations. For example:
  Writer out   = new BufferedWriter(new OutputStreamWriter(System.out));
 A surrogate pair is a character represented by a sequence of two char values: A high surrogate in the range '\uD800' to '\uDBFF' followed by a low surrogate in the range '\uDC00' to '\uDFFF'.
 A malformed surrogate element is a high surrogate that is not followed by a low surrogate or a low surrogate that is not preceded by a high surrogate.
 This class always replaces malformed surrogate elements and unmappable character sequences with the charset's default substitution sequence. The CharsetEncoder class should be used when more control over the encoding process is required.
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.LuogoISTAT.CodiceCatasto">
	<summary>
 Restituisce o imposta il codice catastale
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Anagrafica.LuogoISTAT.CodiceISTAT">
	<summary>
 Restituisce o imposta il codice ISTAT
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.LuogoISTAT">
	<summary>
 Rappresenta un luogo categorizzato dall'ISTAT
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXUserCollection">
	<summary>
 Collezione dei moduli definiti per l'utente
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CContattoEsterno">
	<summary>
 Rappresenta una richiesta di contatto fatta da un sito esterno.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.IFonteProvider.GetSupportedNames">
	<summary>
 Restituisce un array contenente i nomi delle fonti gestiti da questo oggetto
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.IFonteProvider.GetItemsAsArray(System.String,System.Boolean)">
	<summary>
 Restituisce un array delle fonti corrispondenti al nome specificato
 </summary>
	<param name="onlyValid"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.IFonteProvider.GetItemById(System.String,System.Int32)">
	<summary>
 Restituisce la fonte in base all'ID
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Anagrafica.IFonteProvider.GetItemByName(System.String,System.String)">
	<summary>
 Restituisce la fonte in base al nome
 </summary>
	<param name="name"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.IFonteProvider">
	<summary>
 Interfaccia implementata dagli oggetto che fungono da generatori di fonti
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Anagrafica.CRelazioniParentaliClass">
	<summary>
 Rappresenta le relazioni di parentela/affinità tra le persone
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CArraysClass.DefaultComparer">
	<summary>
 Restituisce un'istanza del comparatore predefinito
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CArraysClass.Assign``1(``0@,``0)">
	<summary>
 Assegna a target il valore o il riferimento (se oggetto) di source
 </summary>
	<param name="target"></param>
	<param name="source"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CArraysClass.SwapValues``1(``0@,``0@)">
	<summary>
 Scambia i valori (o i riferimenti) di a e b
 </summary>
	<typeparam name="T"></typeparam>
	<param name="a"></param>
	<param name="b"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CArraysClass.Copy``1(``0[]@,``0[]@)">
	<summary>
 Copia gli elementi dell'array source nell'array dest
 </summary>
	<typeparam name="T"></typeparam>
	<param name="dest"></param>
	<param name="source"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CArraysClass.JoinNonEmptyString(System.String[],System.Int32,System.Int32,System.String)">
	<summary>
 Restituisce una stringa rappresentante gli elementi non vuoti dell'array separati dalla stringa separator
 </summary>
	<param name="items"></param>
	<param name="fromIndex"></param>
	<param name="arrayLen"></param>
	<param name="separator"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CArraysClass.CreateInstance``1(System.Int32)">
	<summary>
 Restituisce un array delle dimensioni specificate
 </summary>
	<typeparam name="T"></typeparam>
	<param name="len"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFileCursor.Pattern">
	<summary>
 Restituisce il filtro di ricerca
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFileCursor.AttributesMask">
	<summary>
 Restituisce la maschera di ricerca
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.FindFileCursor.IncludeSubDirs">
	<summary>
 Restituisce un valore booleano che indica se la ricerca include le sottocartelle
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.FindFileCursor.Count">
	<summary>
 Restituisce il numero di files e/o cartelle corrispondenti al filtro
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.FindFileCursor">
	<summary>
 Cursore su file e cartelle
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.StatoNotifica.NON_CONSEGNATA">
	<summary>
 La notifica non è stata consegnata
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.StatoNotifica.CONSEGNATA">
	<summary>
 L'utente ha ricevuto la notifica ma non l'ha ancora letta
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.StatoNotifica.LETTA">
	<summary>
 La notifica è stata letta
 </summary>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.StatoNotifica.ANNULLATA">
	<summary>
 La notifica è stata annullata
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.StatoNotifica">
	<summary>
 Stato delle notifiche di sistema
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.Data">
	<summary>
 Restituisce o imposta la data a partire dalla quale deve essere visualizzata la nofifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.Context">
	<summary>
 Restituisce o imposta una stringa che descrive il contesto di validità dell'oggetto
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.SourceName">
	<summary>
 Restituisce o imposta il nome dell'oggetto che ha generato il promemoria
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.SourceID">
	<summary>
 Retituisce o imposta l'ID dell'oggetto che ha generato questa notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.TargetID">
	<summary>
 Restituisce o imposta l'ID dell'utente a cui è destinata la notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.Target">
	<summary>
 Restituisce o imposta l'utente a cui è destinata la notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.TargetName">
	<summary>
 Restituisce o imposta il nome dell'utente a cui è destinata la notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.Descrizione">
	<summary>
 Restituisce o imposta la descrizione della notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.DataConsegna">
	<summary>
 Restituisce o imposta la data e l'ora in cui la notifica è stata visualizzata sul PC dell'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.DataLettura">
	<summary>
 Restituisce o imposta la data di lettura della notifica cioè la data in cui l'utente ha eseguito un'azioen sulla notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.Notifica.StatoNotifica">
	<summary>
 Restituisce o imposta lo stato della notifica
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.Notifica">
	<summary>
 Rappresenta una notifica del sistema
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Databases.DBObject">
	<summary>
 Rappresenta un oggetto memorizzato in una tabella con informazioni sullo stato, su data e utente che ha creato l'oggetto e sull'ultima modifica
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Databases.DBObjectBase.ID">
	<summary>
 Restituisce l'ID univoco che identifica l'oggetto nella tabella del database in cui è salvato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectBase.GetModule">
	<summary>
 Quando sottoposto ad override in una classe derivata restituisce il modulo che gestisce l'oggetto
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectBase.OnPropertyChanged(FinSeA.Databases.PropertyChangedEventArgs)">
	<summary>
 Genera l'evento PropertyChanged
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectBase.DoChanged(System.String,System.Object,System.Object)">
	<summary>
 Informa l'oggetto che la proprietà specificata è stata modificata
 </summary>
	<param name="propName"></param>
	<param name="newVal"></param>
	<param name="oldVal"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectBase.IsChanged">
	<summary>
 Restituisce vero se l'oggetto è stato modificato
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Databases.DBObjectBase.SetChanged(System.Boolean)">
	<summary>
 Imposta il valore IsChanged
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="F:FinSeA.Sistema.CRPCClass.lResolve">
	<summary>
 Interfaccia che devono implementare gli oggetti che ricevono le risposte asincrone
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.IEventHandler.NotifyEvent(FinSeA.Sistema.EventDescription)">
	<summary>
 Metodo richiamato dal sistema per notificare l'evento all'handler
 </summary>
	<param name="e">[in] Descrittore dell'evento</param>
</member><member name="T:FinSeA.Sistema.IEventHandler">
	<summary>
 Interfaccia implementata dagli handler degli eventi di sistema
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.Data">
	<summary>
 Data e ora in cui è stato generato l'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.Source">
	<summary>
 Nome della classe che ha generato l'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.User">
	<summary>
 Utente nel cui contesto è stato generato l'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.EventName">
	<summary>
 Nome dell'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.Description">
	<summary>
 Descrizione dell'evento
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CEventLog.Parameters">
	<summary>
 Parametri
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXGroup.ModuleID">
	<summary>
 Restituisce o imposta l'ID dell'azione associata
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXGroup.Module">
	<summary>
 Restituisce o imposta il modulo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXGroup.GroupID">
	<summary>
 Restituisce o imposta l'ID del gruppo associato
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXGroup.Allow">
	<summary>
 Restituisce o imposta un valore booleano che consente esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CModuleXGroup.Negate">
	<summary>
 Restituisce o imposta un valore booleano che nega esplicitamente l'azione all'utente
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CModuleXGroup">
	<summary>
 Rappresenta l'assegnazioni di un modulo ad un gruppo di utenti
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.BaseCalendarActivitiesProvider.GetActivePersons(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
	<summary>
 Restituisce una collezione di oggetti CActivePerson contenente tutte le persone con attività in sospes o nelle date indicate. La collezione è ordinata in funzione della priorità o del ritardo delle operazioni
 </summary>
	<param name="fromDate"></param>
	<param name="toDate"></param>
	<param name="ufficio"></param>
	<param name="operatore"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.BaseCalendarActivitiesProvider">
	<summary>
 Classe base del provider di attività del calendario
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.elements">
	<summary>
 Returns an enumeration of the values in this dictionary.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.get(System.Object)">
	<summary>
 Returns the value to which the key is mapped in this dictionary.
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.isEmpty">
	<summary>
 Tests if this dictionary maps no keys to value.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.keys">
	<summary>
 Returns an enumeration of the keys in this dictionary.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.put(System.Object,System.Object)">
	<summary>
 Maps the specified key to the specified value in this dictionary.
 </summary>
	<param name="key"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.remove(System.Object)">
	<summary>
 Removes the key (and its corresponding value) from this dictionary.
 </summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Dictionary.size">
	<summary>
 Returns the number of entries (distinct keys) in this dictionary.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Dictionary">
	<summary>
 public abstract class Dictionary
 extends Object
 The Dictionary class is the abstract parent of any class, such as Hashtable, which maps keys to values. Every key and every value is an object. In any one Dictionary object, every key is associated with at most one value. Given a Dictionary and a key, the associated element can be looked up. Any non-null object can be used as a key and as a value.
 As a rule, the equals method should be used by implementations of this class to decide if two keys are the same.
 NOTE: This class is obsolete. New implementations should implement the Map interface, rather than extending this class.
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.comparator">
	<summary>
 Returns the comparator used to order the keys in this map, or null if this map uses the natural ordering of its keys.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.firstKey">
	<summary>
 Returns the first (lowest) key currently in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.headMap(`0)">
	<summary>
 Returns a view of the portion of this map whose keys are strictly less than toKey.
 </summary>
	<param name="toKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.lastKey">
	<summary>
 Returns the last (highest) key currently in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.subMap(`0,`0)">
	<summary>
 Returns a view of the portion of this map whose keys range from fromKey, inclusive, to toKey, exclusive.
 </summary>
	<param name="fromKey"></param>
	<param name="toKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap`2.tailMap(`0)">
	<summary>
 Returns a view of the portion of this map whose keys are greater than or equal to fromKey.
 </summary>
	<param name="fromKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.SortedMap`2">
	<summary>
 A Map that further provides a total ordering on its keys. The map is ordered according to the natural ordering of its keys, or by a Comparator typically provided at sorted map creation time. This order is reflected when iterating over the sorted map's collection views (returned by the entrySet, keySet and values methods). Several additional operations are provided to take advantage of the ordering. (This interface is the map analogue of SortedSet.)
 All keys inserted into a sorted map must implement the Comparable interface (or be accepted by the specified comparator). Furthermore, all such keys must be mutually comparable: k1.compareTo(k2) (or comparator.compare(k1, k2)) must not throw a ClassCastException for any keys k1 and k2 in the sorted map. Attempts to violate this restriction will cause the offending method or constructor invocation to throw a ClassCastException.
 Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if the sorted map is to correctly implement the Map interface. (See the Comparable interface or Comparator interface for a precise definition of consistent with equals.) This is so because the Map interface is defined in terms of the equals operation, but a sorted map performs all key comparisons using its compareTo (or compare) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a tree map is well-defined even if its ordering is inconsistent with equals; it just fails to obey the general contract of the Map interface.
 All general-purpose sorted map implementation classes should provide four "standard" constructors. It is not possible to enforce this recommendation though as required constructors cannot be specified by interfaces. The expected "standard" constructors for all sorted map implementations are:
     A void (no arguments) constructor, which creates an empty sorted map sorted according to the natural ordering of its keys.
     A constructor with a single argument of type Comparator, which creates an empty sorted map sorted according to the specified comparator.
     A constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.
     A constructor with a single argument of type SortedMap, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.
 Note: several methods return submaps with restricted key ranges. Such ranges are half-open, that is, they include their low endpoint but not their high endpoint (where applicable). If you need a closed range (which includes both endpoints), and the key type allows for calculation of the successor of a given key, merely request the subrange from lowEndpoint to successor(highEndpoint). For example, suppose that m is a map whose keys are strings. The following idiom obtains a view containing all of the key-value mappings in m whose keys are between low and high, inclusive:
    SortedMap&gt;String, V&lt; sub = m.subMap(low, high+"\0");
 A similar technique can be used to generate an open range (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in m whose keys are between low and high, exclusive:
    SortedMap&gt;String, V&lt; sub = m.subMap(low+"\0", high);
 This interface is a member of the Java Collections Framework.
 </summary>
	<typeparam name="TKey"></typeparam>
	<typeparam name="TValue"></typeparam>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.comparator">
	<summary>
 Returns the comparator used to order the keys in this map, or null if this map uses the natural ordering of its keys.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.firstKey">
	<summary>
 Returns the first (lowest) key currently in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.headMap(System.Object)">
	<summary>
 Returns a view of the portion of this map whose keys are strictly less than toKey.
 </summary>
	<param name="toKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.lastKey">
	<summary>
 Returns the last (highest) key currently in this map.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.subMap(System.Object,System.Object)">
	<summary>
 Returns a view of the portion of this map whose keys range from fromKey, inclusive, to toKey, exclusive.
 </summary>
	<param name="fromKey"></param>
	<param name="toKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.SortedMap.tailMap(System.Object)">
	<summary>
 Returns a view of the portion of this map whose keys are greater than or equal to fromKey.
 </summary>
	<param name="fromKey"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.SortedMap">
	<summary>
 A Map that further provides a total ordering on its keys. The map is ordered according to the natural ordering of its keys, or by a Comparator typically provided at sorted map creation time. This order is reflected when iterating over the sorted map's collection views (returned by the entrySet, keySet and values methods). Several additional operations are provided to take advantage of the ordering. (This interface is the map analogue of SortedSet.)
 All keys inserted into a sorted map must implement the Comparable interface (or be accepted by the specified comparator). Furthermore, all such keys must be mutually comparable: k1.compareTo(k2) (or comparator.compare(k1, k2)) must not throw a ClassCastException for any keys k1 and k2 in the sorted map. Attempts to violate this restriction will cause the offending method or constructor invocation to throw a ClassCastException.
 Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if the sorted map is to correctly implement the Map interface. (See the Comparable interface or Comparator interface for a precise definition of consistent with equals.) This is so because the Map interface is defined in terms of the equals operation, but a sorted map performs all key comparisons using its compareTo (or compare) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a tree map is well-defined even if its ordering is inconsistent with equals; it just fails to obey the general contract of the Map interface.
 All general-purpose sorted map implementation classes should provide four "standard" constructors. It is not possible to enforce this recommendation though as required constructors cannot be specified by interfaces. The expected "standard" constructors for all sorted map implementations are:
     A void (no arguments) constructor, which creates an empty sorted map sorted according to the natural ordering of its keys.
     A constructor with a single argument of type Comparator, which creates an empty sorted map sorted according to the specified comparator.
     A constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.
     A constructor with a single argument of type SortedMap, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.
 Note: several methods return submaps with restricted key ranges. Such ranges are half-open, that is, they include their low endpoint but not their high endpoint (where applicable). If you need a closed range (which includes both endpoints), and the key type allows for calculation of the successor of a given key, merely request the subrange from lowEndpoint to successor(highEndpoint). For example, suppose that m is a map whose keys are strings. The following idiom obtains a view containing all of the key-value mappings in m whose keys are between low and high, inclusive:
    SortedMap&gt;String, V&lt; sub = m.subMap(low, high+"\0");
 A similar technique can be used to generate an open range (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in m whose keys are between low and high, exclusive:
    SortedMap&gt;String, V&lt; sub = m.subMap(low+"\0", high);
 This interface is a member of the Java Collections Framework.
 </summary>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.ModuleActionResult">
	<summary>
 Racchiude informazioni sullo stato dell'esecuzione di un'azione
 </summary>
	<remarks></remarks>
</member><member name="E:FinSeA.Sistema.CNotificheClass.NuoveNotifiche">
	<summary>
 Evento generato quando ci sono nuove notifiche per l'utente corrente
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.CancelPendingAlertsBySource(System.Nullable{System.DateTime},System.Object)">
	<summary>
 Annulla tutte le notifiche pendenti impostate dall'oggetto specificato
 </summary>
	<param name="toDate">[in] Data fino alla quale annullare le notifiche pendenti. Se NULL vengono annullate tutte le date</param>
	<param name="source">[in] Oggetto che ha generato le notifiche da annullare. Se NULL vengono annullate tutte le notifiche</param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.CancelPendingAlertsBySource(FinSeA.Sistema.CUser,System.Nullable{System.DateTime},System.Object)">
	<summary>
 Annulla tutte le notifiche pendenti impostate dall'oggetto specificato
 </summary>
	<param name="user">[in] Utente per cui annullare le notifiche</param>
	<param name="toDate">[in] Data fino a cui annullare le notifiche (se NULL annulla tutte le notifiche)</param>
	<param name="source">[in] Oggetto che ha generato le notifiche. Se NULL annulla tutte le notifiche</param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.ProgramAlert(System.String,System.DateTime,System.Object)">
	<summary>
 Programma un promemoria per l'utente corrente
 </summary>
	<param name="descrione"></param>
	<param name="data"></param>
	<param name="source"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.ProgramAlert(FinSeA.Sistema.CUser,System.String,System.DateTime,System.Object)">
	<summary>
 Programma un promemoria per l'utente specificato
 </summary>
	<param name="user">[in] Utente per cui programmare il promemoria</param>
	<param name="descrione"></param>
	<param name="data"></param>
	<param name="source"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetPendingAlertsBySource(System.Object)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notifiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetPendingAlertsBySource(System.Object,System.String)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notifiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetPendingAlertsBySource(System.Int32,System.Object)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="userID">[in] Utente di cui recuperare le notifiche</param>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetPendingAlertsBySource(FinSeA.Sistema.CUser,System.Object)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="user">[in] Utente di cui recuperare le notifiche</param>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.CountPendingAlertsBySource(System.Object)">
	<summary>
 Restituisce il numero delle notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.CountPendingAlertsBySource(System.Int32,System.Object)">
	<summary>
 Restituisce il numero delle notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetPendingAlertsBySource(FinSeA.Sistema.CUser,System.Object,System.String)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" cioè la cui data è al più oggi e
 </summary>
	<param name="user">[in] Utente di cui recuperare le notifiche</param>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CNotificheClass.GetAlertsBySource(System.Object,System.String)">
	<summary>
 Restituisce la collezione di tutte le notifiche "attive" e non programmate per l'utente
 </summary>
	<param name="source">[in] Oggetto che ha generato le notifiche (se NULL vengono restituite tutte le notitiche)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:FinSeA.Sistema.CNotificheClass">
	<summary>
 Gestione delle notifiche di sistema
 </summary>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.Hex(System.Object)">
	<summary>
 Restituisce la stringa che rappresenta il valore intero [value] in formato esadecimale
 </summary>
	<param name="value">[in] Valore intero da rappresentare in formato esadecimale</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.IsDigit(System.Char)">
	<summary>
 Restituisce vero se il carattere è un valore numerico
 </summary>
	<param name="c"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.GetString(System.Byte[],System.String)">
	<summary>
 Converte il buffer in una stringa utilizzando il set di caratteri specificato con nome
 </summary>
	<param name="buffer">[in] Array di bytes da convertire</param>
	<param name="charSet">[in] Nome del set di caratteri</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.GetString(System.Byte[],System.Int32,System.Int32,System.String)">
	<summary>
 Converte il buffer in una stringa utilizzando il set di caratteri specificato con nome
 </summary>
	<param name="buffer">[in] Array di bytes da convertire</param>
	<param name="charSet">[in] Nome del set di caratteri</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.GetBytes(System.String)">
	<summary>
 Restituisce un buffer di bytes contenente la rappresentazione della stringa 
 </summary>
	<param name="value">[in] La stringa di cui restituire il buffer</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.Metches(System.String,System.String)">
	<summary>
 Restituisce vero se la stringa verifica la regular expression
 </summary>
	<param name="str"></param>
	<param name="expression"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CStringsClass.ReplaceAll(System.String,System.String,System.String)">
	<summary>
 Sostituisce una o più sottostringe usande la regular expression subStr
 </summary>
	<param name="str"></param>
	<param name="subStr"></param>
	<param name="changeTo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.SequenceInputStream.#ctor(System.Collections.Generic.IEnumerable{FinSeA.Io.InputStream})">
	<summary>
 Initializes a newly created SequenceInputStream by remembering the argument, which must be an Enumeration that produces objects whose run-time type is InputStream.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Io.SequenceInputStream.#ctor(FinSeA.Io.InputStream,FinSeA.Io.InputStream)">
	<summary>
 Initializes a newly created SequenceInputStream by remembering the two arguments, which will be read in order, first s1 and then s2, to provide the bytes to be read from this SequenceInputStream.
 </summary>
	<param name="s1"></param>
	<param name="s2"></param>
	<remarks></remarks>
</member><member name="T:FinSeA.Io.SequenceInputStream">
	<summary>
 A SequenceInputStream represents the logical concatenation of other input streams. It starts out with an ordered collection of input streams and reads from the first one until end of file is reached, whereupon it reads from the second one, and so on, until end of file is reached on the last of the contained input streams.
 </summary>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CTypesClass.NewTypeHandlers">
	<summary>
 Restituisec la collezione dei gestori di tipi esterni
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.MethodExists(System.Object,System.String)">
	<summary>
 Restituisce vero se l'oggetto obj espone il membro pubblico methodName
 </summary>
	<param name="obj"></param>
	<param name="methodName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.Copy(System.Object,System.Object@)">
	<summary>
 Copia tutti i campi di source in target (fields)
 Gli oggetti vengono copiati per riferimento
 </summary>
	<param name="source"></param>
	<param name="target"></param>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.GetAllFields(System.Type)">
	<summary>
 Restituisce tutti i campi definiti per il tipo e per le sue superclassi
 </summary>
	<param name="t"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.BitwiseCompare(System.Object,System.Object)">
	<summary>
 Compare tutti i campi di a con quelli di b.
 Gli oggetti vengono comparati per riferimento.
 </summary>
	<param name="a"></param>
	<param name="b"></param>
	<remarks></remarks>
</member><member name="P:FinSeA.Sistema.CTypesClass.Imports">
	<summary>
 Restituisce l'elenco dei namespace importati. I namespace importati consentono di instanziare una classe senza dover specificare il nome completo
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.vbTypeName(System.Object)">
	<summary>
 Restituisce il nome del tipo dell'oggetto eliminato eventuali parametrizzazioni
 </summary>
	<param name="obj"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.IsNull(System.Object)">
	<summary>
 Restituisce vero se il valore passato come argomento è un oggetto Nothing, un valore DBNull.Value oppure un NULLABLE senza valore
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:FinSeA.Sistema.CTypesClass.GetItemByTypeAndId(System.String,System.Int32)">
	<summary>
 Restituisce un oggetto in base al tipo registrato ed al suo ID
 </summary>
	<param name="type">[in] Nome del provider che implementa la funzione GetItemByID</param>
	<param name="id">[in] ID dell'oggetto da restituire</param>
	<returns></returns>
	<remarks></remarks>
</member>
</members>
</doc>